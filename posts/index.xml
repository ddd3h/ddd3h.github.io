<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ddd3hLab</title>
    <link>/posts/</link>
    <description>Recent content in Posts on ddd3hLab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 09 Aug 2023 20:00:09 +0900</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>2023年08月09日 気まぐれ日記</title>
      <link>/posts/2023-08-09/</link>
      <pubDate>Wed, 09 Aug 2023 20:00:09 +0900</pubDate>
      
      <guid>/posts/2023-08-09/</guid>
      <description>日記２日目
８月９日
７時頃に目を覚ます。あー寝落ちたのか。
昨日は研究室で飲み会で、二次会まで行ったため、頭がいたい。
いわゆる二日酔い。
やらねばならないことがあるので、とりあえず大量に水を飲む。
9時には家を出て、取引先に引き継ぎの人を紹介し挨拶をする。
あー二日酔い。
眠いので冷蔵庫のZoneを取り出し、頑張る。
量子力学もちゃんと理解すれば面白いんだよな。
後輩にこれってどうやって解いたか聞いたら、
あー自分が第1励起状態を求めるのに、\( \ket{1,1} \) を計算していた。。。
ナイス後輩。</description>
    </item>
    
    <item>
      <title>2023年09月-2023年12月の予定 [Updated: 2023-08-09]</title>
      <link>/posts/schedule202308/</link>
      <pubDate>Wed, 09 Aug 2023 09:00:09 +0900</pubDate>
      
      <guid>/posts/schedule202308/</guid>
      <description> </description>
    </item>
    
    <item>
      <title>2023年08月06日 気まぐれ日記</title>
      <link>/posts/2023-08-06/</link>
      <pubDate>Sun, 06 Aug 2023 22:00:09 +0900</pubDate>
      
      <guid>/posts/2023-08-06/</guid>
      <description>日記一日目
８月６日
目が覚めると10:00、うーん眠い。
おもろい夢＋疲れてるのでもう一回寝る。
11:00起きた。飯食って、歌いながら大学に向かいたかったので、車でいく。
だちゃんから「すみません」ラインが来てニヤけるｗ
大学ついた。誰もいない。
冷蔵庫からZoneを取り出して、頑張るかと意気込んこんで、ウミユリ海底譚をリピートしながら電磁気を解く。やっぱ電磁気はおもろい。
あ、ドクターの人が18:00ぐらいにやってきた。冷房を上げてる、草。
（自分も寒かったので、あざます）
あっ！！もう21:00か。帰るか。
宮内が日記がいいというので、ここに毎日あげてみようかな。笑</description>
    </item>
    
    <item>
      <title>後輩のためのLinux知識</title>
      <link>/posts/2023-07-27/</link>
      <pubDate>Thu, 27 Jul 2023 09:00:09 +0900</pubDate>
      
      <guid>/posts/2023-07-27/</guid>
      <description>はじめに # Linuxを使う上で、知っておくと便利な知識をまとめています。
基本的には、自分の優秀な後輩たちに向けて書いたつもりです。
サーバーに接続 # サーバ側がsshd(ssh daemon)が起動している場合は、sshコマンドを使って接続できます。
ssh # 基本形は以下の通りです。
ssh [user]@[host] [user]にはサーバ側に登録されているユーザー名を入れます。
[host]にはサーバのホスト名、IPアドレス、ドメインなどを入れます。
ホスト名は、DNSサーバなどで変換されている必要がありますが、IPアドレスはそのまま使えます。 (ローカル)ネットワーク外から接続するには、グローバルIPアドレスが必要です。 sshコマンドの主なオプションは次の通りです。
オプション 意味 -p ポート番号 接続に使用するポート番号を指定する -l ユーザー名 接続に使用するユーザー名を指定する -i IDファイル 接続に使用する公開鍵ファイルを指定する -C 全ての通信を圧縮する -c 暗号化方法 通信を暗号化する方法を指定する（「3des」「blowfish」「des」が指定可能） -1 SSHv1（SSHプロトコルバージョン1）だけを使用する -2 SSHv2（SSHプロトコルバージョン2）だけを使用する -4 IPv4だけを使用する -6 IPv6だけを使用する -K GSSAPI（Generic Security Services API）による認証を許可する -k GSSAPIによる認証を許可しない -A 認証エージェントを転送する（1つ目のサーバに接続後、続けて別のサーバに接続する際に、最初に使った秘密鍵をそのまま使用する） -a 認証エージェントを転送しない -X X11のポートフォワーディングを有効にする（リモートマシンのXアプリケーションが実行できるようになる） -x X11のポートフォワーディングを無効にする -Y 信頼されたX11転送（Trusted X11）を有効にする -f コマンドを実行する際にsshをバックグラウンドにする（Xアプリケーションを実行する際に使用） -F 設定ファイル 設定ファイルを指定する -o 設定パラメータ 設定パラメータを指定する（設定ファイルに書かれた内容より優先される） -E ログファイル名 エラーを指定したファイルに記録する -q エラーメッセージや診断メッセージを表示しない（quiet mode） -v デバッグメッセージを表示する（verbose mode） サーバーとクライアント間でファイルを転送する # サーバにあるファイルを、ローカルPCなどに持ってきたい時、逆にローカルPCにあるデータをサーバに転送したいときなどにはscpコマンドが有効です。</description>
    </item>
    
    <item>
      <title>TNG_catcher.extract_subhalo_data</title>
      <link>/posts/tng_catcher.extract_subhalo_data/</link>
      <pubDate>Sat, 17 Jun 2023 20:50:09 +0900</pubDate>
      
      <guid>/posts/tng_catcher.extract_subhalo_data/</guid>
      <description>TNG_catcher/ TNG_catcher.extract_subhalo_data
次の一行でモジュールを読み込みます。
from TNG_catcher import * このモジュールは次のクラスが定義されてあります。
extract_subhalo_data （順次作成中） はじめに # Illustris-TNGのサイトには、様々な銀河のカタログが公開されています。
そこでこれらを簡単に取得したい／解析したいと思い、このモジュールを作成しました。
ファイル構造 # 📦 . ├─ sims.TNG │ ├─ TNG50-1 │ │ ├─ output │ │ │ ├─ groups_000 │ │ │ │ ├─ fof_subhalo_tab_000.</description>
    </item>
    
    <item>
      <title>TNG_catcher.plot_tools</title>
      <link>/posts/tng_catcher.plot_tools/</link>
      <pubDate>Sat, 17 Jun 2023 20:50:09 +0900</pubDate>
      
      <guid>/posts/tng_catcher.plot_tools/</guid>
      <description>TNG_catcher/ TNG_catcher.plot_tools
次の一行でモジュールを読み込みます。
from TNG_catcher import * このモジュールは次のクラスが定義されてあります。
extract_subhalo_data （順次作成中） はじめに # そこでこれらを簡単に取得したい／解析したいと思い、このモジュールを作成しました。
解析データの挿入（インスタンスの作成） # import numpy as np dd = np.load(&amp;#34;data.npz&amp;#34;) test = plot_tools(dd) インスタンスを作成するにあたり、読み込むのはNpzFileです。extract_subhalo_dataクラスなどで出力したものを使用します。独自に抽出したデータでも構いません。
簡易描画する # 「しっかり描画したい」とき、「簡易的に描画したい」ときというのがあると思います。</description>
    </item>
    
    <item>
      <title>宇宙論的sim用の便利ツールTNG_catcherを開発したみた</title>
      <link>/posts/tng_catcher/</link>
      <pubDate>Sat, 17 Jun 2023 20:50:09 +0900</pubDate>
      
      <guid>/posts/tng_catcher/</guid>
      <description>TNG_catcher
開発経緯 # Illustris-TNGを用いたシミュレーションデータを単純に自分がもっと便利に楽に解析したいと思ったから。
Illustris-TNGのホームページ
インストール # ddd3h/TNG_catcher Python 0 0 TNG_catcherはライブラリを読み込んだ段階で次のモジュールを自動で読み込みます。
import illustris_python as il import numpy as np import pandas as pd import os import matplotlib.pyplot as plt from matplotlib.</description>
    </item>
    
    <item>
      <title>院試関連(過去問解答集)</title>
      <link>/posts/master_et_exam/</link>
      <pubDate>Sat, 03 Jun 2023 15:00:09 +0900</pubDate>
      
      <guid>/posts/master_et_exam/</guid>
      <description>過去問解答集 # ある程度、完成したものを公開していく。 間違い等があればご連絡いただけると助かります。
マークは院試勉強会等にて一定の解答の精査が行われたものです。
大阪大学大学院/物理学・宇宙地球科学専攻 # 2023年度入学分 2022年度入学分 2021年度入学分 (19.9MB) 大問1 (4.7MB) 大問2 (6.6MB) 大問3 (4.1MB) 大問4 (6.2MB) 2020年度入学分 (17.1MB) 大問1 (4.1MB) 大問2 (完答せず、不明点あり) (2.4MB) 大問3 (7.5MB) 大問4 (4.</description>
    </item>
    
    <item>
      <title>HEAsoftを高速にダウンロードする</title>
      <link>/posts/2023-03-13/</link>
      <pubDate>Mon, 13 Mar 2023 15:00:09 +0900</pubDate>
      
      <guid>/posts/2023-03-13/</guid>
      <description>&amp;ldquo;HEAsoft&amp;quot;って何？ # HEAsoftは、高エネルギー天体物理学に関連するデータ解析ソフトウェアのパッケージです。このパッケージには、NASAの多くのX線天文衛星ミッションで使用されるデータ解析ソフトウェアが含まれています。たとえば、Chandra X線天文台、XMM-Newton、Suzakuなどが挙げられます。
HEAsoftには、X線天文学に関する多くのツールが含まれており、X線スペクトルの分析、背景の推定、画像処理、時系列解析などが可能です。HEAsoftは、主にUNIXベースのシステムで動作することが意図されていますが、WindowsやMac OS Xなどのプラットフォームでも使用することができます。
HEAsoftは、NASAの高エネルギー天体物理学の研究者や、天文学者、物理学者、コンピューターサイエンティスト、その他の関連分野の研究者によって使用されています。
http://heasarc.gsfc.nasa.gov/docs/software.html
ダウンロード # NASAのサイトからHEAsoftのSource Codeをダウンロードする。ダウンロードサイトは https://heasarc.gsfc.nasa.gov/docs/software/lheasoft/download.html
ダウンロードサイトで
STEP1：適切な自分のPC環境を選ぶ。
STEP2：個々のミッションファイルを選ぶ。今後、様々な衛星データを扱う予定ならば「All」でよい。
以上が完了したら「Submit」
「tar.gz」ファイルがダウンロードされる。
tar.gzファイルはtarが非圧縮でファイルをひとまとまりにするもの、gzは圧縮。
ダウンロード時間（１〜２時間かかる）は長いのでコーヒーブレイクでも楽しむと良い。
下に載せたやり方であれば5分足らずで完了する。 あまりにも遅い場合、国内サーバーにUbuntuのバージョンのみではあるが、（期間限定で）サーバー上においておくので、そこからダウンロードしてもよい。
やりかた
ターミナルで以下のコマンド2行を実行する wget --keep-session-cookies --save-cookies=&amp;#34;cookies.txt&amp;#34; &amp;#34;https://20.gigafile.nu/0621-le3295726dd5b0b45503e5823972cde05&amp;#34; wget --load-cookies &amp;#34;cookies.</description>
    </item>
    
    <item>
      <title>Ubuntu / Zorin OSはやっぱりいい</title>
      <link>/posts/2023-01-11/</link>
      <pubDate>Wed, 11 Jan 2023 20:50:09 +0900</pubDate>
      
      <guid>/posts/2023-01-11/</guid>
      <description>Ubuntuも Zorin OSもLinuxと呼ばれるディストリビューションなわけなのだが、そんなLinuxを私が好む理由はいくつかある。
オープンソース：Linuxはオープンソースのオペレーティングシステムであり、誰でも自由にアクセスでき、改良することができます。これは、ソフトウェアの自由な利用を可能にし、コミュニティが共同でソフトウェアを開発することができるため、透明性とセキュリティの向上につながります。 カスタマイズ性：Linuxは、ユーザーがカスタマイズすることができる幅広いオプションを提供します。ユーザーは、自分の好みに合わせてデスクトップ環境、ウィンドウマネージャ、ターミナルエミュレータ、パッケージマネージャなどを選択することができます。 安定性：Linuxは、多くの場合、非常に安定して動作します。これは、コードがオープンソースであるため、多数の開発者が常にバグ修正やパフォーマンス向上に取り組んでいるためです。 セキュリティ：Linuxは、セキュリティに非常に優れています。これは、オープンソースであるため、多数の開発者がコードをレビューし、問題を修正することができるためです。また、Linuxは、標準的にセキュリティ機能が組み込まれているため、セキュリティの強化が容易です。 コマンドラインツール：Linuxは、強力なコマンドラインツールを提供します。これにより、複雑なタスクを効率的に実行することができます。また、これらのツールは、自動化やスクリプト化に適しているため、開発者やシステム管理者にとって非常に便利です。 こういった理由から多くのプログラムはLinuxベースで作成されることが多い。逆にLinuxに対応しないプログラムはこの世から消え去る運命にさえあるといいと思う。
ただし、Linuxには学習コストがかかる場合があるため、WindowsやmacOSと比較して、初心者にとっては使いにくい場合もある。 Ubuntu # まず、Linuxディストリビューションの中で最も人気のあるOSであろう。特にデスクトップ環境(GUI環境)も非常に洗練されていて初めて使うのであればこれが良い。そして何より情報が豊富である。
Ubuntu（ウブントゥ[6]、[ʊˈbʊntuː] ( 音声ファイル); oo-BOON-too[7]）はDebian GNU/Linuxを母体としたオペレーティングシステム（OS）である。Linuxディストリビューションの1つであり、フリーソフトウェアとして提供されている。概念はディストリビューションも参照。カノニカルから支援を受けて開発されている。開発目標は「誰にでも使いやすい最新かつ安定したOS」を提供することである。
— Ubuntu - Wikipedia
Zorin OS # Zorin OSはUbuntuよりもよりデスクトップ環境に重きを置いている。
Zorin OS 16のデスクトップの写真であるが、非常に綺麗であろう。中身というかベースはUbuntuなのでLinuxでやりたいことは全てできる。</description>
    </item>
    
    <item>
      <title>TeX打ちの最高環境を構築したい</title>
      <link>/posts/2022-09-13/</link>
      <pubDate>Tue, 13 Sep 2022 20:50:09 +0900</pubDate>
      
      <guid>/posts/2022-09-13/</guid>
      <description>※ Windowsの方はTeXstudioを脳筋でインストールしてコンパイラ設定とビルド設定していただけば使えます。また、後日、通常のコンパイル速度の10倍高速にコンパイルできる方法の記事を上げたいと思います。
新しくMac/Linuxを用意したのなら # MacTeXをインストールします
MacTeX - TeX Users Group
TeXstudioをIDEとしていつも使用しているのですが、残念ながら最新版のv4.3.1はなぜか、Google日本語入力での入力ができません（Mac純正のIMEをご利用の方は気にせず最新版をインストールしてください）。
そこでv3.1.2をインストールすることにしました（このバージョンに特段理由はありません）。こちらからダウンロードできます。
TeXstudio - A LaTeX Editor - Browse /3.1.2 at SourceForge.net
最新版はこちらです。
https://www.texstudio.org/
TeXstudioの設定 # コンパイルシステムの変更 # ダウンロードが完了したら、TeXstudio &amp;gt; 環境設定 &amp;gt; コマンド からLaTeXのコンパイルシステムをuplatexに変更します。設定は以下のように変更します。</description>
    </item>
    
    <item>
      <title>便利なFish Shellをインストールしよう</title>
      <link>/posts/2022-09-12/</link>
      <pubDate>Mon, 12 Sep 2022 20:50:09 +0900</pubDate>
      
      <guid>/posts/2022-09-12/</guid>
      <description>さていつものように brew install fish をしてみるが、残念ながら買ったばっかりのMacにはHomebrewは入っていない。
Homebrewをインストールする # そこでHomebrewのインストールから始めなくてはいけない。
/bin/bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)&amp;#34;``` HomebrewはMacユーザーにとっては便利なツールであるからインストールしておいて損はないだろう。
さて、インストールできたらここからが本番である。
私のMacはすでにデフォルトでZshが採用されている．以前のMacではBashを使い続け、Appleからの「Zshに変更しましょう」みたいなやつを無視し続けてきた。
（こういうところで「新しい」Macというのを感じることになるとは……）
さてインストールが完了するとこんなエラーが出た。
Warning: /opt/homebrew/bin is not in your PATH. Instructions on how to configure your shell for Homebrew can be found in the &amp;#39;Next steps&amp;#39; section below.</description>
    </item>
    
    <item>
      <title>相対論を用いてタイムトラベルを語るのは強引か？</title>
      <link>/posts/2021-09-30/</link>
      <pubDate>Thu, 30 Sep 2021 20:50:09 +0900</pubDate>
      
      <guid>/posts/2021-09-30/</guid>
      <description>タイムトラベルという言葉を用いるとき，ときどき半半ば強引に「相対論によると」光速に近ければ時間は遅くなるという話が存在する．確かに光速で進む物体の時間は静止系よりも時間がゆっくり進むことになるし，一種のタイムトラベルとも言えそうである．
しかし，双子のパラドックスという概念を引き合いにしてその理屈はおかしいと主張する人が少数いる．
実際どうなのか検討する記事である．
まず，結論を先に話すと双子のパラドックスの問題解消のために，一般相対論を出すものもいるが，一般相対論なんかを使わずとも特殊相対論で十分に解消できる．
さらに，光速で進む物体の時間は静止系よりも時間がゆっくり進むし，慣性系に戻ってきても時間は相対的には遅れている．つまり，同い年だったのに数年後には10歳差ということもありうる．
相対論の復習 # 光速 \(c\) に近い速度で進む物体においてはNewtonの運動方程式は適応できない．このような状況では相対論的効果も考慮し，考えなくてはいけない．
世界距離 # 今回のタイトルでは「世界距離」という言葉を使わせていただいたが，書籍によっては「世界間隔」と表記するものも多い．どちらも同じことを指しているので本サイトでは前者で統一する．
世界距離は四次元座標 \(x^\mu\)，Minkowski計量 \(\eta_{\mu \nu}\)を用いて
$$ ds^2 = \eta_{\mu \nu} dx^\mu dx^\nu $$
と表せる．ここで地球に観測者がいる系を静止系と呼び，光速で移動している系を移動系ということにする．静止系において光速で移動している観測者を見るとその移動距離は \(c^2 dt^2\) であるから世界距離</description>
    </item>
    
  </channel>
</rss>
