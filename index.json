[{"content":"ddd3hLabは、 著者が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開するサイトである。\nAbout Me ","date":"2023年 3月 13日","permalink":"/","section":"","summary":"ddd3hLabは、 著者が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開するサイトである。\nAbout Me ","title":""},{"content":"","date":"2023年 3月 13日","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":" \u0026ldquo;HEAsoft\u0026quot;って何？ # HEAsoftは、高エネルギー天体物理学に関連するデータ解析ソフトウェアのパッケージです。このパッケージには、NASAの多くのX線天文衛星ミッションで使用されるデータ解析ソフトウェアが含まれています。たとえば、Chandra X線天文台、XMM-Newton、Suzakuなどが挙げられます。\nHEAsoftには、X線天文学に関する多くのツールが含まれており、X線スペクトルの分析、背景の推定、画像処理、時系列解析などが可能です。HEAsoftは、主にUNIXベースのシステムで動作することが意図されていますが、WindowsやMac OS Xなどのプラットフォームでも使用することができます。\nHEAsoftは、NASAの高エネルギー天体物理学の研究者や、天文学者、物理学者、コンピューターサイエンティスト、その他の関連分野の研究者によって使用されています。\nhttp://heasarc.gsfc.nasa.gov/docs/software.html\nダウンロード # NASAのサイトからHEAsoftのSource Codeをダウンロードする。ダウンロードサイトは https://heasarc.gsfc.nasa.gov/docs/software/lheasoft/download.html\nダウンロードサイトで\nSTEP1：適切な自分のPC環境を選ぶ。\nSTEP2：個々のミッションファイルを選ぶ。今後、様々な衛星データを扱う予定ならば「All」でよい。\n以上が完了したら「Submit」\n「tar.gz」ファイルがダウンロードされる。\ntar.gzファイルはtarが非圧縮でファイルをひとまとまりにするもの、gzは圧縮。\nダウンロード時間（１〜２時間かかる）は長いのでコーヒーブレイクでも楽しむと良い。\n下に載せたやり方であれば5分足らずで完了する。 あまりにも遅い場合、国内サーバーにUbuntuのバージョンのみではあるが、（期間限定で）サーバー上においておくので、そこからダウンロードしてもよい。\nやりかた\nターミナルで以下のコマンド2行を実行する wget --keep-session-cookies --save-cookies=\u0026#34;cookies.txt\u0026#34; \u0026#34;https://20.gigafile.nu/0621-le3295726dd5b0b45503e5823972cde05\u0026#34; wget --load-cookies \u0026#34;cookies.txt\u0026#34; -O \u0026#34;heasoft-6.31.1src.tar.gz\u0026#34; \u0026#34;https://20.gigafile.nu/download.php?file=0621-le3295726dd5b0b45503e5823972cde05\u0026#34; URLの有効期限は2023/6/21です。これ以降ダウンロードされる場合は管理者にご連絡ください。 以下のコマンドでファイルを展開します。\ntar xzvf \u0026#34;heasoft-6.31.1src.tar.gz\u0026#34; heasoft-6.31.1というディレクトリができていることを確認しましょう。\nBUILD_DIRに移動して、インストールを開始します。\ncd heasoft-6.31.1/BUILD_DIR TXTファイルにDUMPする人もいますが、別にエラーなんてその場で見てください。なのでDUMPなんかせず、ただ単に実行します。\n./configure 私の場合は次のエラーが出ました。\nconfigure: error: Required file /usr/include/X11/Xlib.h not found!\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! Ubuntu 22.04 LTS以降ではデフォルトでGUI(X Window System)やデスクトップ環境が入っていません。なぜこういう古いシステムが好きなんですかね。。。\n次のコマンドを実行してインストールします。\nsudo apt install xorg-dev エラーを解消したら再度、./configureと実行してください。\n再度、私は次のようなエラーが出ました。\nconfigure: error: AstroPy unavailable but required for HEASoftPy\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! AstorPyつまりPythonのライブラリが入ってなかったようです。なのでご自分のPython環境に合わせてインストールしてください。\npip install astropy エラーを解消すると次Scipyです。。。「自動でインストールシステム作れ」と怒りたくなりますが、根気よくインストールしていきます。こちらもPythonですので、上同様に実行してください。\n念の為、やり方は\npip install scipy またこんなエラーがでました。。。\nconfigure: error: No curses header-files found\rconfigure: error: Configure failed for heacore component lynx!\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! たぶんですが一行目にこういったエラーが出たということで予想ですが次のように実行して、エラー祭りを回避します。\nsudo apt install libreadline-dev libcurl4 libcurl4-gnutls-dev libncurses5-dev Finishedが出れば完了です。次のステップに行きましょう。\nMakeコマンドでコンパイルをします。おそらく、configureを通っているのでエラーは無いと思います。ここでもDUMPせずに進みます。\nmake インストールをします。\nmake install Pathの設定をする（daisukeはユーザー名ですので適宜変更してください。）\nexport HEADAS=/home/daisuke/heasoft-6.31.1/x86_64-pc-linux-gnu-libc2.35 . $HEADAS/headas-init.sh alias heainit=\u0026#34;. $HEADAS/headas-init.sh\u0026#34; heainit .bashrc等にでも書いておくといい．実際に動くはfvと入力して動けば動くということである．\n","date":"2023年 3月 13日","permalink":"/posts/2023-03-13/","section":"Posts","summary":"\u0026ldquo;HEAsoft\u0026quot;って何？ # HEAsoftは、高エネルギー天体物理学に関連するデータ解析ソフトウェアのパッケージです。このパッケージには、NASAの多くのX線天文衛星ミッションで使用されるデータ解析ソフトウェアが含まれています。たとえば、Chandra X線天文台、XMM-Newton、Suzakuなどが挙げられます。\nHEAsoftには、X線天文学に関する多くのツールが含まれており、X線スペクトルの分析、背景の推定、画像処理、時系列解析などが可能です。HEAsoftは、主にUNIXベースのシステムで動作することが意図されていますが、WindowsやMac OS Xなどのプラットフォームでも使用することができます。\nHEAsoftは、NASAの高エネルギー天体物理学の研究者や、天文学者、物理学者、コンピューターサイエンティスト、その他の関連分野の研究者によって使用されています。\nhttp://heasarc.gsfc.nasa.gov/docs/software.html\nダウンロード # NASAのサイトからHEAsoftのSource Codeをダウンロードする。ダウンロードサイトは https://heasarc.gsfc.nasa.gov/docs/software/lheasoft/download.html\nダウンロードサイトで\nSTEP1：適切な自分のPC環境を選ぶ。\nSTEP2：個々のミッションファイルを選ぶ。今後、様々な衛星データを扱う予定ならば「All」でよい。\n以上が完了したら「Submit」\n「tar.gz」ファイルがダウンロードされる。\ntar.gzファイルはtarが非圧縮でファイルをひとまとまりにするもの、gzは圧縮。\nダウンロード時間（１〜２時間かかる）は長いのでコーヒーブレイクでも楽しむと良い。\n下に載せたやり方であれば5分足らずで完了する。 あまりにも遅い場合、国内サーバーにUbuntuのバージョンのみではあるが、（期間限定で）サーバー上においておくので、そこからダウンロードしてもよい。\nやりかた\nターミナルで以下のコマンド2行を実行する wget --keep-session-cookies --save-cookies=\u0026#34;cookies.txt\u0026#34; \u0026#34;https://20.gigafile.nu/0621-le3295726dd5b0b45503e5823972cde05\u0026#34; wget --load-cookies \u0026#34;cookies.","title":"HEAsoftを高速にダウンロードする"},{"content":"","date":"2023年 3月 13日","permalink":"/tags/linux/","section":"Tags","summary":"","title":"linux"},{"content":"","date":"2023年 3月 13日","permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux"},{"content":"","date":"2023年 3月 13日","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"2023年 3月 13日","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"2023年 1月 11日","permalink":"/tags/ubuntu/","section":"Tags","summary":"","title":"ubuntu"},{"content":" Ubuntuも Zorin OSもLinuxと呼ばれるディストリビューションなわけなのだが、そんなLinuxを私が好む理由はいくつかある。\nオープンソース：Linuxはオープンソースのオペレーティングシステムであり、誰でも自由にアクセスでき、改良することができます。これは、ソフトウェアの自由な利用を可能にし、コミュニティが共同でソフトウェアを開発することができるため、透明性とセキュリティの向上につながります。 カスタマイズ性：Linuxは、ユーザーがカスタマイズすることができる幅広いオプションを提供します。ユーザーは、自分の好みに合わせてデスクトップ環境、ウィンドウマネージャ、ターミナルエミュレータ、パッケージマネージャなどを選択することができます。 安定性：Linuxは、多くの場合、非常に安定して動作します。これは、コードがオープンソースであるため、多数の開発者が常にバグ修正やパフォーマンス向上に取り組んでいるためです。 セキュリティ：Linuxは、セキュリティに非常に優れています。これは、オープンソースであるため、多数の開発者がコードをレビューし、問題を修正することができるためです。また、Linuxは、標準的にセキュリティ機能が組み込まれているため、セキュリティの強化が容易です。 コマンドラインツール：Linuxは、強力なコマンドラインツールを提供します。これにより、複雑なタスクを効率的に実行することができます。また、これらのツールは、自動化やスクリプト化に適しているため、開発者やシステム管理者にとって非常に便利です。 こういった理由から多くのプログラムはLinuxベースで作成されることが多い。逆にLinuxに対応しないプログラムはこの世から消え去る運命にさえあるといいと思う。\nただし、Linuxには学習コストがかかる場合があるため、WindowsやmacOSと比較して、初心者にとっては使いにくい場合もある。 Ubuntu # まず、Linuxディストリビューションの中で最も人気のあるOSであろう。特にデスクトップ環境(GUI環境)も非常に洗練されていて初めて使うのであればこれが良い。そして何より情報が豊富である。\nUbuntu（ウブントゥ[6]、[ʊˈbʊntuː] ( 音声ファイル); oo-BOON-too[7]）はDebian GNU/Linuxを母体としたオペレーティングシステム（OS）である。Linuxディストリビューションの1つであり、フリーソフトウェアとして提供されている。概念はディストリビューションも参照。カノニカルから支援を受けて開発されている。開発目標は「誰にでも使いやすい最新かつ安定したOS」を提供することである。\n— Ubuntu - Wikipedia\nZorin OS # Zorin OSはUbuntuよりもよりデスクトップ環境に重きを置いている。\nZorin OS 16のデスクトップの写真であるが、非常に綺麗であろう。中身というかベースはUbuntuなのでLinuxでやりたいことは全てできる。\nできれば、Zorin OSを私は使いたい。\nZorin OS（ゾーリンオーエス）は、UbuntuをベースとするLinuxディストリビューションである。2009年7月1日にバージョン1.0を提供開始した。当時12歳と14歳の少年が主になって製作した。Core版のデスクトップ環境はGNOMEベースであり、Lite版のデスクトップ環境はLXDEだったが、バージョン12でXfceに変更された。Core版ではWindows 7風のUIをデフォルトで提供していた。Windows XP風やGNOME 2風のデザインにすることも可能である。有料版としてPro (旧 Ultimate)が存在する。また、無料版にはCore、Lite、Educationが存在する。\nアイルランドの首都ダブリンに拠点を構えるロシア系ウクライナ人エンジニアのアルチョム・ゾーリン(Артём Зорин)とキリル・ゾーリン(Кирилл Зорин)を中心に開発されている。\n— Zorin OS - Wikipedia\nVMで試した感想 # Zorin OSは少し重い。\nとは言ってもLinux自体軽いのでLinuxの中では重い類ということ。\nここからは、LinuxのOS内の設定をしていき、自分がよく使うツールが使えるようにしていく。\nPython # ここでは最新版である3.11はインストールしません。この理由については後日。\nインストール方法は\naptを使用する方法\nマニュアルでインストールする方法\nの２つがある。どちらか好きな方でインストールするといい。\n科学計算のためにPythonを使用する人の中にはAnacondaを推奨する者もいる。確かに1,500個以上のパッケージ、それを管理するパッケージ管理システムとcondaパッケージおよび仮想環境マネージャーなど沢山の便利な機能があり、オススメできる。しかしながら、肥大化しがちで動作が重くなりやすい。高性能なPCで無い場合やノートPCの場合はAnacondaではなく、Python単体だけインストールして自分で必要なパッケージを一つ一つ入れて、パッケージ管理するのがいいだろう。 ①aptを使用する方法 # 端末からaptとしてPythonをインストールできます。次のようにppaを追加し、Python 3.10バージョンをインストールします。\nsudo add-apt-repository ppa:deadsnakes/ppa sudo apt install python3.10 インストールが完了したら、以下のようにうまくインストールされていることを確認できます。\npython3.10 --version 3.10.9 ②マニュアルでインストールする # 次のようにwegetでインストールファイルをダウンロードします。そして解凍してインストールします。\nsudo apt install gcc make ただし、gccやmakeがインストールされていないと思われますので先にこちらのインストールを忘れずにしましょう。\nwget https://www.python.org/ftp/python/3.10.9/Python-3.10.9.tgz tar -xf Python-3.10.*.tgz cd Python-3.10.*/ ./configure --enable-optimizations make -j $(nproc) sudo make altinstall インストールが完了したら、以下のようにうまくインストールされていることを確認できます。\npython3.10 --version 3.10.9 エイリアス設定をする # bashの人 # .bashrcを開いて\nalias python=\u0026#39;python3.10\u0026#39; alias pip=\u0026#39;pip3.10\u0026#39; などに設定しておくと良い。\nfishの人 # .config/fish/config.fishを開いて\nalias python \u0026#34;python3.10\u0026#34; alias pip \u0026#34;pip3.10\u0026#34; などに設定しておくと良い。\nJulia # そもそもJuliaを知らない人のために\n「Julia」とは、高度な計算や数値解析のできるスクリプト言語です。 マサチューセッツ工科大学の研究者Jeff Bezansonらによって2009年に開発され、2012年にオープンソース化されました。\n開発者は、Juliaについて、ほかの言語のいいところだけを組み合わせることを目指した言語だと述べています。 例えば、C言語の速さやR言語の統計の扱いやすさ、Perlの自然な文字列処理、Matlabの線形代数などについて言及しています。そして、完成したJuliaはPythonの汎用性を保ちながら、便利さや速さを従来の言語と比較して大幅に改善し、使いやすい言語になりました。\n— 【入門編】プログラミング言語Juliaの特徴、メリット…｜Udemy メディア\n私はよく使うのでインストールします。\nインストール # まずは 公式ホームページ より、最新のバージョンを確認します。ダウンロードリンクを取得してきてください。それをwgetします。\n（別にコマンドラインではなく、クリックしてダウンロードしてもいいです。）\nwget https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.2-linux-x86_64.tar.gz tar -zxvf julia-1.5.2-linux-x86_64.tar.gz sudo mv ~/julia-1.5.2 /opt/ Pathを通す # \u0026#34;export PATH=/opt/julia-1.5.2/bin/:$PATH\u0026#34; \u0026gt;\u0026gt; .bashrc ※「\u0026gt;」と「\u0026gt;\u0026gt;」について # 「\u0026gt;」は、リダイレクト演算子と呼ばれます。リダイレクト演算子は、コマンドラインで実行されるコマンドの出力を、指定されたファイルに書き込むために使用されます。\nたとえば、以下のようにして、「ls」コマンドの出力をファイルに書き込むことができます。\nls \u0026gt; file.txt このコマンドは、「ls」コマンドの出力を「file.txt」という名前のファイルに書き込みます。ファイルが存在しない場合は新規に作成されます。また、既存のファイルに書き込む場合は、既存の内容が上書きされます。\n他にも、「\u0026gt;\u0026gt;」というリダイレクト演算子もあります。この演算子は、「\u0026gt;」と同様に、出力をファイルに書き込むために使用されますが、既存のファイルに追記する場合に使用します。たとえば、以下のようにして、「echo」コマンドの出力を既存のファイルに追記することができます。\necho \u0026#34;Hello, World!\u0026#34; \u0026gt;\u0026gt; file.txt このコマンドは、「Hello, World!」という文字列を既存の「file.txt」というファイルに追記します。\nJupyter Notebookをインストールする # Jupyter NotebookにはデフォルとでIPythonカーネルが付属しているため、Pythonのセクションで話せばよかったのだが、これには理由がある。\nJuliaはJITコンパイラを使用しているため、その強みを活かすにはJupyter notebookなどが最適なのだ。\npipなのかpip3なのかpip3.10なのか人によって違うと思うので確認してもらいたいが、ここでは統一してpipで進める。\npip install jupyter これでインストール完了。\nJuliaを起動する。\nJulia 実行結果\n_ _ _ _(_)_ | Documentation: https://docs.julialang.org (_) | (_) (_) | _ _ _| |_ __ _ | Type \u0026#34;?\u0026#34; for help, \u0026#34;]?\u0026#34; for Pkg help. | | | | | | |/ _` | | | | |_| | | | (_| | | Version 1.8.3 (2022-11-14) _/ |\\__\u0026#39;_|_|_|\\__\u0026#39;_| | Official https://julialang.org/ release |__/ | ]を入力してパッケージモードを起動する。\nadd IJuliaを入力してEnter。 ついでに次のパッケージもインストールするとよい。\nadd Plots add Optim add Latexify add LaTeXStrings add Polynomials add SpecialPolynomials add SpecialFunctions バックスペースで元のREPLに戻る。\nREPL上で次のように入力する。\nusing IJulia; notebook(detached=true) 少し待つと, 自動的にブラウザが起動する（はず）\nこれで完了である。\nbashからfish shellに変更する # Mac版は既に解説してますが、Linux版です。\nインストール # sudo apt-add-repository ppa:fish-shell/release-3 sudo apt-get update sudo apt-get install fish 確認 # fish -v 実行結果\nfish, version 3.2.0 デフォルトのシェルを変更 # .bashrcからfish shellを起動するようにしてもいいのですが、bashコマンドが無効化されることになるのでやめましょう！ chsh 実行結果\nパスワード: ------ のログインシェルを変更中 新しい値を入力してください。標準設定値を使うならリターンを押してください ログインシェル [/bin/bash]: /usr/bin/fish fisherのインストール # curl -sL https://git.io/fisher | source \u0026amp;\u0026amp; fisher install jorgebucaran/fisher sudo apt-get install fonts-powerline 確認 # fisher -v 実行結果\nfisher, version 4.3.0 fisherの便利な使い方は以下の記事で解説しているの参照してください。\n便利なFish Shellをインストールしよう 2022年 9月 12日\u0026middot;313 文字\u0026middot;2 分 お好みのテーマにする # 今回は私がハマってるテーマ「tide」を紹介する。\nIlanCosman/tide 🌊 The ultimate Fish prompt. Shell 1983 77 「zsh」のPowerlevel10kのスタイルが非常に魅了されたので、「fish」でも探したら「tide」という名前であったというわけです。\nフォントのインストール # まずは先に「Nerd font」というのをインストールします。好みのフォントをダウンロード、解凍してOSに対応したフォントをインストールしてください。その後ターミナルアプリにフォントを設定してください。\nhttps://www.nerdfonts.com/font-downloads\ntideのインストール # fisher install IlanCosman/tide@v5 インストールができたら指示に従ってカスタマイズしていってください。\nTeX # ノートPCや普段使いのPCがWindowsの人はぜひLinuxに\\(\\TeX\\)を入れよう。\nWindowsのコンパイル速度に比べ、LinuxやmacOSは非常にコンパイル速度が速い。長い文章になればなるほど、Linuxに入れてよかったと思うはずだ。\nWinodowsユーザーよ、後悔したくなければLinuxにインストールせよ。\nインストール # 公式のUbuntuリポジトリはさまざまな種類のインストールパッケージを提供してくれている。\ntexlive-base – 160 MB texlive-latex-recommended – 203 MB texlive – 269 MB texlive-latex-extra – 464 MB texlive-full – 5903 MB fullでもいいのだが5GBもダウンロードするのは嫌なので、次のコマンドでインストールする。\nsudo apt install texlive-lang-cjk sudo apt install texlive-fonts-recommended sudo apt install texlive-fonts-extra TeXstudioのインストール # 次に\\(\\TeX\\)を快適に使える環境を整えるのだが、TeXstudioをおすすめしている（いつかTeXstudio vs VScodeとかやりたい）。そのインストールは次の記事と同じなのでそれを参照されたい。\nTeX打ちの最高環境を構築したい 2022年 9月 13日\u0026middot;160 文字\u0026middot;1 分 ","date":"2023年 1月 11日","permalink":"/posts/2023-01-11/","section":"Posts","summary":"Ubuntuも Zorin OSもLinuxと呼ばれるディストリビューションなわけなのだが、そんなLinuxを私が好む理由はいくつかある。\nオープンソース：Linuxはオープンソースのオペレーティングシステムであり、誰でも自由にアクセスでき、改良することができます。これは、ソフトウェアの自由な利用を可能にし、コミュニティが共同でソフトウェアを開発することができるため、透明性とセキュリティの向上につながります。 カスタマイズ性：Linuxは、ユーザーがカスタマイズすることができる幅広いオプションを提供します。ユーザーは、自分の好みに合わせてデスクトップ環境、ウィンドウマネージャ、ターミナルエミュレータ、パッケージマネージャなどを選択することができます。 安定性：Linuxは、多くの場合、非常に安定して動作します。これは、コードがオープンソースであるため、多数の開発者が常にバグ修正やパフォーマンス向上に取り組んでいるためです。 セキュリティ：Linuxは、セキュリティに非常に優れています。これは、オープンソースであるため、多数の開発者がコードをレビューし、問題を修正することができるためです。また、Linuxは、標準的にセキュリティ機能が組み込まれているため、セキュリティの強化が容易です。 コマンドラインツール：Linuxは、強力なコマンドラインツールを提供します。これにより、複雑なタスクを効率的に実行することができます。また、これらのツールは、自動化やスクリプト化に適しているため、開発者やシステム管理者にとって非常に便利です。 こういった理由から多くのプログラムはLinuxベースで作成されることが多い。逆にLinuxに対応しないプログラムはこの世から消え去る運命にさえあるといいと思う。\nただし、Linuxには学習コストがかかる場合があるため、WindowsやmacOSと比較して、初心者にとっては使いにくい場合もある。 Ubuntu # まず、Linuxディストリビューションの中で最も人気のあるOSであろう。特にデスクトップ環境(GUI環境)も非常に洗練されていて初めて使うのであればこれが良い。そして何より情報が豊富である。\nUbuntu（ウブントゥ[6]、[ʊˈbʊntuː] ( 音声ファイル); oo-BOON-too[7]）はDebian GNU/Linuxを母体としたオペレーティングシステム（OS）である。Linuxディストリビューションの1つであり、フリーソフトウェアとして提供されている。概念はディストリビューションも参照。カノニカルから支援を受けて開発されている。開発目標は「誰にでも使いやすい最新かつ安定したOS」を提供することである。\n— Ubuntu - Wikipedia\nZorin OS # Zorin OSはUbuntuよりもよりデスクトップ環境に重きを置いている。\nZorin OS 16のデスクトップの写真であるが、非常に綺麗であろう。中身というかベースはUbuntuなのでLinuxでやりたいことは全てできる。","title":"Ubuntu / Zorin OSはやっぱりいい"},{"content":"","date":"2023年 1月 11日","permalink":"/tags/zorin-os/","section":"Tags","summary":"","title":"zorin os"},{"content":"※ Windowsの方はTeXstudioを脳筋でインストールしてコンパイラ設定とビルド設定していただけば使えます。また、後日、通常のコンパイル速度の10倍高速にコンパイルできる方法の記事を上げたいと思います。\n新しくMac/Linuxを用意したのなら # MacTeXをインストールします\nMacTeX - TeX Users Group\nTeXstudioをIDEとしていつも使用しているのですが、残念ながら最新版のv4.3.1はなぜか、Google日本語入力での入力ができません（Mac純正のIMEをご利用の方は気にせず最新版をインストールしてください）。\nそこでv3.1.2をインストールすることにしました（このバージョンに特段理由はありません）。こちらからダウンロードできます。\nTeXstudio - A LaTeX Editor - Browse /3.1.2 at SourceForge.net\n最新版はこちらです。\nhttps://www.texstudio.org/\nTeXstudioの設定 # コンパイルシステムの変更 # ダウンロードが完了したら、TeXstudio \u0026gt; 環境設定 \u0026gt; コマンド からLaTeXのコンパイルシステムをuplatexに変更します。設定は以下のように変更します。\nuplatex -synctex=1 -interaction=nonstopmode %.tex platex等でもいいですし、Latexでもいいと思いますが、基本的に日本語を入力する場合は、高速にコンパイルでき、unicodeに対応したuplatexをオススメします。\nducumentclassのオプションにuplatexを入れるのを忘れずに！\nビルドの変更 # 環境設定の中の「ビルド＆表示」を「DVI-\u0026gt;PDFチェーン」にします。\n「規定のコンパイラ」が「LaTeX」でない場合は、変更します。\n組み込みPDFビュアーで日本語を見れるようにする # 次に組み込みPDFビュアーで日本語を表示できるようにします。以下のコマンドでpopplerというPDFドキュメントの閲覧エンジンの場所が分かります。\nstrings -a /Applications/texstudio.app/Contents/Frameworks/libpoppler.*.dylib | grep poppler このコマンドでどこにあるかが表示されます。それに合わせて、poppler-dataをダウンロードしましょう。私は次のように表示されました。\n/usr/local/Cellar/poppler/21.05.0/share/poppler Unknown CID font collection, please report to poppler bugzilla. %Produced by poppler pdftops version: {0:s} ([http://poppler.freedesktop.org](http://poppler.freedesktop.org/)) 一行目をよく覚えておきましょう！\npoppler-dataは、最新版が0.4.11です(2022年9月現在)。なので、poppler-data-0.4.11.tar.gzをダウンロードしましょう。\ncurl -kO https://poppler.freedesktop.org/poppler-data-0.4.11.tar.gz tar xvf poppler-data-0.4.11.tar.gz これで、poppler-dataをダウンロードし、展開することができました。\n次に先程覚えてもらった場所に、以下のコマンドでフォルダを作成して、poppler-dataをコピーします。\nsudo mkdir -p /usr/local/Cellar/poppler/21.05.0/share/poppler sudo cp -pR ~/poppler-data-0.4.11/* /usr/local/Cellar/poppler/21.05.0/share/poppler これが完了したら、ダウンロードフォルダーにあるpoppler-dataは削除していただいて結構です。TeXstudioを開くと日本語がPDFビュアーに表示されると思います。\nスタイルをよくする # ここでは私好みにテーマ等を変更する方法を教えます。\nスタイルはOrion Darkにして行の折り返しを以下のように設定します．\n行の折り返しで「最大文字数」に設定することで，TeXstudioのバグを克服しています．\nバックスラッシュ「\\」で自動補完が使えない方へ # 私は今回からUSキーボードにしたのでこの問題は解消されました。しかし、大半の方はJISキーボードでしょうから、もしかしたら、バックスラッシュを押しても自動補完がされないかもしれません。\nそこで「karabiner-elements」をインストールして「￥」と「＼」を置換します。\nここから最新版をインストールしてください。\nhttps://karabiner-elements.pqrs.org/\n設定 # Preferences の Complex Modifications のタブを開き、 画面下の \u0026ldquo;Add rule\u0026rdquo; をおすとダイアログが表示されるので、 ダイアログ上部の \u0026ldquo;Import more rules from internet (open a web browser)\u0026rdquo; ボタンを押します。\nそうすると、予め準備されたルール一覧のページがブラウザで表示されるので、\u0026ldquo;Swap ¥ and \\ always on JIS Keyboards\u0026rdquo; というルールを探して、そのルールの \u0026ldquo;Import\u0026rdquo; ボタンを押します。\nKarabiner-Elements.app を開くかどうかのポップアップが表示されるので、 \u0026ldquo;Karabiner-Elements.app を開く\u0026rdquo; ボタンを押します。\nボタンを押すと、Karabiner-Elements 側で import するか聞かれるので、\u0026ldquo;Import\u0026rdquo; ボタンを押します。\nImportを行うと、もともと例として表示されている3つのルールの下に、 \u0026ldquo;Swap ¥ and \\ always on JIS Keyboards\u0026rdquo; ルールの2つのサブルールが表示されるので、 \u0026ldquo;Enable All\u0026rdquo; ボタンを押して、2つともEnableにしてください。\nこれで完了です。\n","date":"2022年 9月 13日","permalink":"/posts/2022-09-13/","section":"Posts","summary":"※ Windowsの方はTeXstudioを脳筋でインストールしてコンパイラ設定とビルド設定していただけば使えます。また、後日、通常のコンパイル速度の10倍高速にコンパイルできる方法の記事を上げたいと思います。\n新しくMac/Linuxを用意したのなら # MacTeXをインストールします\nMacTeX - TeX Users Group\nTeXstudioをIDEとしていつも使用しているのですが、残念ながら最新版のv4.3.1はなぜか、Google日本語入力での入力ができません（Mac純正のIMEをご利用の方は気にせず最新版をインストールしてください）。\nそこでv3.1.2をインストールすることにしました（このバージョンに特段理由はありません）。こちらからダウンロードできます。\nTeXstudio - A LaTeX Editor - Browse /3.1.2 at SourceForge.net\n最新版はこちらです。\nhttps://www.texstudio.org/\nTeXstudioの設定 # コンパイルシステムの変更 # ダウンロードが完了したら、TeXstudio \u0026gt; 環境設定 \u0026gt; コマンド からLaTeXのコンパイルシステムをuplatexに変更します。設定は以下のように変更します。","title":"TeX打ちの最高環境を構築したい"},{"content":"","date":"2022年 9月 13日","permalink":"/tags/%E6%97%A5%E8%A8%98/","section":"Tags","summary":"","title":"日記"},{"content":"","date":"2022年 9月 13日","permalink":"/categories/%E6%97%A5%E8%A8%98/","section":"Categories","summary":"","title":"日記"},{"content":"さていつものように brew install fish をしてみるが、残念ながら買ったばっかりのMacにはHomebrewは入っていない。\nHomebrewをインストールする # そこでHomebrewのインストールから始めなくてはいけない。\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;``` HomebrewはMacユーザーにとっては便利なツールであるからインストールしておいて損はないだろう。\nさて、インストールできたらここからが本番である。\n私のMacはすでにデフォルトでZshが採用されている．以前のMacではBashを使い続け、Appleからの「Zshに変更しましょう」みたいなやつを無視し続けてきた。\n（こういうところで「新しい」Macというのを感じることになるとは……）\nさてインストールが完了するとこんなエラーが出た。\nWarning: /opt/homebrew/bin is not in your PATH. Instructions on how to configure your shell for Homebrew can be found in the \u0026#39;Next steps\u0026#39; section below. ==\u0026gt; Installation successful! ==\u0026gt; Homebrew has enabled anonymous aggregate formulae and cask analytics. Read the analytics documentation (and how to opt-out) here: https://docs.brew.sh/Analytics No analytics data has been sent yet (nor will any be during this install run). ==\u0026gt; Homebrew is run entirely by unpaid volunteers. Please consider donating: https://github.com/Homebrew/brew#donations ==\u0026gt; Next steps: - Run these two commands in your terminal to add Homebrew to your PATH: echo \u0026#39;eval \u0026#34;$(/opt/homebrew/bin/brew shellenv)\u0026#34;\u0026#39; \u0026gt;\u0026gt; /Users/daisuke/.zprofile eval \u0026#34;$(/opt/homebrew/bin/brew shellenv)\u0026#34; - Run brew help to get started - Further documentation: https://docs.brew.sh PATHが通らなかったらしい。とりあえず，PATHを通そう。\nここでzshにはbashと同様に .zshrc と zprofile という2つが存在する。zshrcはログインシェルとインタラクティブシェルの場合だけ読み込まれる。 zprofile はログインシェルの場合に１度だけ読み込まれる。\nvi ~/.zprofile この中に\nexport PATH=/opt/homebrew/bin:$PATH を最終行に追記してください。\nようやくfishをインストール。 # さてbrewをインストールすることができたのでfishをインストールするぞ。\nあ、自分でPathを通しておいて気づきませんでしたが、brewは、Apple Siliconでは /opt/homebrew/bin/brew にあるそうです。\nまじかよ。。。\nそれが本当に最適かどうかは分からないのですが、とりあえずfishを動かすためにshellのPathを変更します。\nsudo vi /etc/shells # 末尾に /opt/homebrew/bin/fish を追加 chsh -s /opt/homebrew/bin/fish 自分はHyperをターミナルに使用しているのですが、Mac本体の再起動が必要そうです。\n同じようにGitHubで嘆いている人を見かけたのですが、論破されてました。\nIn the words of my school IT director, \u0026ldquo;did you doa restart?”\nHyper doesn\u0026rsquo;t use default shell on MacOS · Issue #4266 · vercel/hyper\n本当にそうですね。同じように問題が起こった人は、再起動をしましょう。\nこの後、fish側の環境変数やらの設定をしましょう。\n同じことを２度もしてるような感じもするので、面倒臭ければzshをdefaultのshellにして、起動とともにfishを起動するようにしてもいいかも知れません。\nfishの設定は ~/.config/fish/config.fish に記述します。\n私はPython等の都合もあり、以下のようにしました。\nif status is-interactive # Commands to run in interactive sessions can go here set -x PATH /opt/homebrew/bin $PATH set -x PATH /Library/Frameworks/Python.framework/Versions/3.10/bin $PATH alias python \u0026#39;python3\u0026#39; alias pip \u0026#39;pip3\u0026#39; end これを書いた後は、fishをより便利におしゃれにしていきます。\n自分好みのfishに変更する # 私は oh-my-fish のテーマを使います。\nフォントもそれに対応したものをインストールしましょう。\nインストールが完了したら、使用されてるターミナルからフォントを変更してください。\nfisher install oh-my-fish/theme-bobthefish git clone https://github.com/powerline/fonts.git cd fonts ./install.sh cd rm -rf ./fonts パッケージマネジャーfisherをインストールする # fisherは便利なので入れとくといいです。\ncurl https://git.io/fisher --create-dirs -sLo ~/.config/fish/functions/fisher.fish プラグインをインストールする # z # 今回はディレクトリの履歴から検索して表示してくれるzというプラグインのみを入れます。めちゃ便利です。\nbrew install z fisher install jethrokuan/z 頑張った成果を見よう # Apple Siliconの環境設定頑張ったので\nfisher install laughedelic/fish_logo fish_logo をして達成感を味わいましょう笑\n___ ___======____=---=) /T \\_--===) [ \\ (O) \\~ \\_-==) \\ / )J~~ \\-=) \\\\___/ )JJ~~~ \\) \\_____/JJJ~~~~ \\ / \\ , \\J~~~~~ \\ (-\\)\\=|\\\\\\~~~~ L__ (\\\\) (\\\\\\)_ \\==__ \\V \\\\\\) ===_____ \\\\\\\\\\\\ \\V) \\_) \\\\\\\\JJ\\J\\) /J\\JT\\JJJJ) (JJJ| \\UUU) ","date":"2022年 9月 12日","permalink":"/posts/2022-09-12/","section":"Posts","summary":"さていつものように brew install fish をしてみるが、残念ながら買ったばっかりのMacにはHomebrewは入っていない。\nHomebrewをインストールする # そこでHomebrewのインストールから始めなくてはいけない。\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;``` HomebrewはMacユーザーにとっては便利なツールであるからインストールしておいて損はないだろう。\nさて、インストールできたらここからが本番である。\n私のMacはすでにデフォルトでZshが採用されている．以前のMacではBashを使い続け、Appleからの「Zshに変更しましょう」みたいなやつを無視し続けてきた。\n（こういうところで「新しい」Macというのを感じることになるとは……）\nさてインストールが完了するとこんなエラーが出た。\nWarning: /opt/homebrew/bin is not in your PATH. Instructions on how to configure your shell for Homebrew can be found in the \u0026#39;Next steps\u0026#39; section below.","title":"便利なFish Shellをインストールしよう"},{"content":" タイムトラベルという言葉を用いるとき，ときどき半半ば強引に「相対論によると」光速に近ければ時間は遅くなるという話が存在する．確かに光速で進む物体の時間は静止系よりも時間がゆっくり進むことになるし，一種のタイムトラベルとも言えそうである．\nしかし，双子のパラドックスという概念を引き合いにしてその理屈はおかしいと主張する人が少数いる．\n実際どうなのか検討する記事である．\nまず，結論を先に話すと双子のパラドックスの問題解消のために，一般相対論を出すものもいるが，一般相対論なんかを使わずとも特殊相対論で十分に解消できる．\nさらに，光速で進む物体の時間は静止系よりも時間がゆっくり進むし，慣性系に戻ってきても時間は相対的には遅れている．つまり，同い年だったのに数年後には10歳差ということもありうる．\n相対論の復習 # 光速 \\(c\\) に近い速度で進む物体においてはNewtonの運動方程式は適応できない．このような状況では相対論的効果も考慮し，考えなくてはいけない．\n世界距離 # 今回のタイトルでは「世界距離」という言葉を使わせていただいたが，書籍によっては「世界間隔」と表記するものも多い．どちらも同じことを指しているので本サイトでは前者で統一する．\n世界距離は四次元座標 \\(x^\\mu\\)，Minkowski計量 \\(\\eta_{\\mu \\nu}\\)を用いて\n$$ ds^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu $$\nと表せる．ここで地球に観測者がいる系を静止系と呼び，光速で移動している系を移動系ということにする．静止系において光速で移動している観測者を見るとその移動距離は \\(c^2 dt^2\\) であるから世界距離\n$$ d s^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu = - c^2 dt^2 + c^2 dt^2 = 0 $$\nがいえる．\nまた，移動系においては観測者は静止しているので世界距離\n$$ ds\u0026rsquo;^2 = \\eta_{\\mu \\nu} dx\u0026rsquo;^\\mu dx\u0026rsquo;^\\nu = 0 - c^2 dt\u0026rsquo;^2 $$\nがいえる．ただ世界距離はLorentz不変であるから\n$$ ds^2 = ds\u0026rsquo;^2 $$\nがいえる．ゆえに，\\(dt\u0026rsquo; = 0\\) がいえて時間は静止しているように見えることが分かる．\n双子のパラドックス # ここでどんなパラドックスが生じるかといえば以上の議論はあくまでも相対的な事柄でしか無い．\nつまり，光速で移動している系（移動系）から地球を見れば地球が光速で移動しているわけである．つまり，移動系から見れば静止系の時間が止まっているし，静止系から見れば移動系の時間が止まっているのである．\nすなわち双子A, Bのうち片方Bだけが光速で地球から旅をして帰ってきたとき異なる時間を持つ（お互い相手の時計は止まってると思っている）二人が出会うため，矛盾が生じてしまう．これを双子パラドックスと呼んでいる．\n双子のパラドックスの解消 # これは単純な問題である．上の議論は特殊相対性原理に則っているため，慣性系でしか議論はできない．しかし，移動系は一旦，地球に戻るためにUターンもしくは減速を行うはずである．つまりこの際に慣性系は破れ加速度系となってしまう．\nゆえに，移動系から見てはいけないのだ．\n地球（静止系）は常に慣性系であるのでこちらで議論した結末は問題なく正しい．ゆえに，双子の片方Bは光速で移動しているため時間は静止しているため出発時と同じ年齢で時間は一切進まずに帰ってくる，というのが正解となる．\n一般相対論など不必要であるし，きちんと慣性系のみだけで議論すればいいだけの話である．\n相対論を用いてタイムトラベルを話すのは\u0026hellip; # タイムトラベルというのが何なのかの定義付けにはよるが，上で議論したように実際に移動した系とそうでない系で時間に隔たりができる．\nそれゆえ，タイムトラベルと呼ぶのは問題ないだろうし強引とまでは言い難いのかもしれない．\n","date":"2021年 9月 30日","permalink":"/posts/2021-09-30/","section":"Posts","summary":"タイムトラベルという言葉を用いるとき，ときどき半半ば強引に「相対論によると」光速に近ければ時間は遅くなるという話が存在する．確かに光速で進む物体の時間は静止系よりも時間がゆっくり進むことになるし，一種のタイムトラベルとも言えそうである．\nしかし，双子のパラドックスという概念を引き合いにしてその理屈はおかしいと主張する人が少数いる．\n実際どうなのか検討する記事である．\nまず，結論を先に話すと双子のパラドックスの問題解消のために，一般相対論を出すものもいるが，一般相対論なんかを使わずとも特殊相対論で十分に解消できる．\nさらに，光速で進む物体の時間は静止系よりも時間がゆっくり進むし，慣性系に戻ってきても時間は相対的には遅れている．つまり，同い年だったのに数年後には10歳差ということもありうる．\n相対論の復習 # 光速 \\(c\\) に近い速度で進む物体においてはNewtonの運動方程式は適応できない．このような状況では相対論的効果も考慮し，考えなくてはいけない．\n世界距離 # 今回のタイトルでは「世界距離」という言葉を使わせていただいたが，書籍によっては「世界間隔」と表記するものも多い．どちらも同じことを指しているので本サイトでは前者で統一する．\n世界距離は四次元座標 \\(x^\\mu\\)，Minkowski計量 \\(\\eta_{\\mu \\nu}\\)を用いて\n$$ ds^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu $$\nと表せる．ここで地球に観測者がいる系を静止系と呼び，光速で移動している系を移動系ということにする．静止系において光速で移動している観測者を見るとその移動距離は \\(c^2 dt^2\\) であるから世界距離","title":"相対論を用いてタイムトラベルを語るのは強引か？"},{"content":"著者は、西濱 大将（にしはま だいすけ、Daisuke NISHIHAMA）で、専門は宇宙理論物理学、宇宙実験物理学、数値解析、電子回路設計、情報通信工学である。\n来歴 # 2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年10月 埼玉大学学生表彰受賞 2021年12月 CanSat機体「SC-2.1」PM 2022年03月 株式会社MediHub IT顧問就任 2022年04月 あかとき第3代代表に就任（2023年03月退任） 2022年04月 CanSat機体「SC-11」電装班長 チーム「翔ぶよ埼玉」で団体初のフライバック部門に第18回能代宇宙イベントに参加した。 【あかとき】第18回能代宇宙イベントPV - YouTube　3 2022年05月 ANCO-project 電装班、GUI化プロジェクトPM 2022年09月 ANCO-projectにて、スペースバルーンを用いて独自開発した放射検出器を使用し、成層圏の宇宙線とオゾン濃度を測定し、そのメカニズム解明を行う。 JAXA/ISASにて発表 2022年12月 伊豆大島共同打上実験運営 CanSat担当 安全管理上の理由により中止 2023年03月 ANCO-project 通信班 開発執行責任者 就任 2023年04月 宇宙物理学実験研究室配属 実績 # 開発 # Simulation Software FROGS Python ver., CORE – (2020)\nMATLABで既に開発が進んでいた飛翔シュミレーション「FROGS」をPython版で開発を行った。\nStudy on relationship between tidal force and atmosphereic pressure, Saitama University – (2021)\n2021年に投稿した潮汐力と気圧の関係に関する研究。\nDevelopment of algorithm for 0m goal of CanSat by various sensors, AKTK – (2022)\nセンサーによる0 mゴール用のアルゴリズムの開発を行い、2022年4月にその有効性を示した。\nDevelopment of a GUI display of comprehensive received data, AKTK – (2022)\nスペースバルーンプロジェクト「ANCO-project」にて使用する受信データをGUI表示するプログラムの開発を行った。\n研究 # 調整中 技術 # 主力プログラミング言語は、Python4、C言語5、C++6、Julia7 である。\n講演・口頭発表等 # オゾンと放射線の関わりを解き明かす—ANCO-Project (2022.11)\nUncovering the relationship between ozone and radiation―ANCO-Project\nInstitute of Space and Astronautical Science, Japan Aerospace Exploration Agency(JAXA)(ISAS) 教育活動 # 埼玉大学にて理学的なPythonの使い方を講義しました 理学部学生にとても役立つ『Python講座』- 埼玉大学 (2023.02) 連絡先 # 📧 Mail: daisukenishihama63@gmail.com\n🐦 Twitter: @daisuke0603\n🔗 Instagram: @daisukenishihama\n██████╗ ██████╗ ██████╗ ██████╗ ██╗ ██╗ ██╔══██╗██╔══██╗██╔══██╗╚════██╗██║ ██║ ██║ ██║██║ ██║██║ ██║ █████╔╝███████║ ██║ ██║██║ ██║██║ ██║ ╚═══██╗██╔══██║ ██████╔╝██████╔╝██████╔╝██████╔╝██║ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚═╝ ╚═╝ 正式名称は「埼玉大学宇宙工学サークルあかとき」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n正式名称は「Challengers of Rocket Engineering」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n著書が作成した本プロジェクトに関する広報動画。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n読みやすく、それで簡単に書ける。そのため、私にとって主力のプログラミング言語である。 IPythonや Jupyterといった開発環境に加え、Pythonの苦手な繰り返し作業をC言語にさせることのできる Cythonなどライブラリが方法である。特に、私は科学計算に用いることが多いため、 Matplotlib、 Pandas、 Numpy、 Scipyなどを用いることが多い。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n1972年に誕生し、非常に長い歴史を持ち、OSや組み込み系の開発などに用いられる。特にC言語はPythonのような インタプリタ言語ではなく、 コンパイル方式であり、また変数の型を厳密に定義付けられるため非常に高速で、速度が求められる大掛かりな計算においては科学計算を主に扱う私にとって欠かせない存在。コンパイルには GNU Compiler Collection (GCC)を用いる。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nC言語と似た言語であるが、データ構造を定義でき、例外処理が可能であることからC言語よりも１つ上の存在である。より高度な処理を行うときに重宝する。また、 マイコンの１つである Arduinoも、C++をベースにしたArduino言語で記述できるため非常に有用性も高い。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n現在、開発途中でひよこの言語。C言語とPythonのいいとこ取りをしたプログラミング言語であり、非常に高速かつ簡単に記述できる。私が初めて独学ではなく、他者と交えてゼミで学習したプログラミング言語である。体系的に学んだはいいが、PythonやC言語に逃げてしまい、あまり使ってない。▶ Think Julia: How to Think Like a Computer Scientist\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"0001年 1月 1日","permalink":"/memo/","section":"","summary":"著者は、西濱 大将（にしはま だいすけ、Daisuke NISHIHAMA）で、専門は宇宙理論物理学、宇宙実験物理学、数値解析、電子回路設計、情報通信工学である。\n来歴 # 2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年10月 埼玉大学学生表彰受賞 2021年12月 CanSat機体「SC-2.","title":""},{"content":"","date":"0001年 1月 1日","permalink":"/author/","section":"Authors","summary":"","title":"Authors"},{"content":" このサイトの目的 # ddd3hLabは、私が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開するために開設したサイトです。\n知識は社会全体の財産であり、個人の利益や自己顕示欲のためにのみ利用されるべきではありません。知識や技術は、共有され、第三者によって再検証され、二次利用が可能な、オープンソースの形式が理想的であると私は考えています。\nオープンソースの形式が持つ利点としては、知識や技術を広く共有することができることが挙げられます。オープンソースのソフトウェアは、誰でも自由に使用でき、改変や再配布が可能です。このような形式によって、知識や技術が一部の人々だけが独占することがなくなり、より多くの人々がそれを利用することができるようになります。\nまた、オープンソースの形式は、多数の人々が協力して開発することが可能であるため、より高品質なソフトウェアを開発することができます。オープンソースのプロジェクトに参加することで、多くの人々が新しい知識や技術を習得し、アイデアを出し合い、新しい知識や技術を生み出すことができます。\nさらに、オープンソースの形式は、知識や技術の進展を促進するための環境を提供することができます。オープンソースのプロジェクトに参加することで、多くの人々が新しい知識や技術を習得し、それを活用して新しい製品やサービスを開発することができます。また、オープンソースの技術を利用することで、より効率的な社会システムを構築することも可能です。\n以上のように、オープンソースの形式は、知識や技術を共有し、社会全体の発展を促進するための重要な手段となります。私たちは、オープンソースの形式を利用して、よりよい社会を実現するための取り組みを続けるべきです。\nこのような理想のために本サイトを運営し、人類の科学発展に寄与することを目的としています。\n科学の健全な発展のために # 科学者として研究・開発をしていく上で、以下のことを誓う1。\n真実を追求する：真実を追求することを最優先に考え、正確なデータと分析に基づいた研究を行う。 インテグリティを守る：研究において不正行為や偽りを行わない研究を行う。また、他の研究者の成果を尊重し、適切な引用を行う。 社会に貢献する：研究成果を社会に還元し、人々の健康や環境の改善に貢献する。また、社会的な問題を解決するために、自分の専門分野を超えた取り組みにも積極的に参加する。 オープンな研究環境を支持する：知識やデータの共有を積極的に支援し、オープンな研究環境を推進する。また、研究成果の公正な評価と透明性を確保するために、公正な査読プロセスに参加する。 自己研鑽を継続する：自己研鑽を継続し、常に最先端の知識や技術を取り入れる。また、自分の研究成果に対する批判的な態度を持ち、常に改善を意識していく。 科学に対し、誠実で責任ある態度を持ち、社会に貢献し、健全な科学の発展を願う。\nサイトマップ # ホーム 本サイトについて 著者について 来歴 研究・開発 講演・口頭発表等 受賞 [調整中] 投稿一覧 カテゴリ別 Linux Project 日記 公開データ 宣誓する上で日本学術振興会 「科学の健全な発展のために －誠実な科学者の心得－」( PDF)を参考にした。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"0001年 1月 1日","permalink":"/about/","section":"","summary":"このサイトの目的 # ddd3hLabは、私が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開するために開設したサイトです。\n知識は社会全体の財産であり、個人の利益や自己顕示欲のためにのみ利用されるべきではありません。知識や技術は、共有され、第三者によって再検証され、二次利用が可能な、オープンソースの形式が理想的であると私は考えています。\nオープンソースの形式が持つ利点としては、知識や技術を広く共有することができることが挙げられます。オープンソースのソフトウェアは、誰でも自由に使用でき、改変や再配布が可能です。このような形式によって、知識や技術が一部の人々だけが独占することがなくなり、より多くの人々がそれを利用することができるようになります。\nまた、オープンソースの形式は、多数の人々が協力して開発することが可能であるため、より高品質なソフトウェアを開発することができます。オープンソースのプロジェクトに参加することで、多くの人々が新しい知識や技術を習得し、アイデアを出し合い、新しい知識や技術を生み出すことができます。\nさらに、オープンソースの形式は、知識や技術の進展を促進するための環境を提供することができます。オープンソースのプロジェクトに参加することで、多くの人々が新しい知識や技術を習得し、それを活用して新しい製品やサービスを開発することができます。また、オープンソースの技術を利用することで、より効率的な社会システムを構築することも可能です。\n以上のように、オープンソースの形式は、知識や技術を共有し、社会全体の発展を促進するための重要な手段となります。私たちは、オープンソースの形式を利用して、よりよい社会を実現するための取り組みを続けるべきです。\nこのような理想のために本サイトを運営し、人類の科学発展に寄与することを目的としています。\n科学の健全な発展のために # 科学者として研究・開発をしていく上で、以下のことを誓う1。\n真実を追求する：真実を追求することを最優先に考え、正確なデータと分析に基づいた研究を行う。 インテグリティを守る：研究において不正行為や偽りを行わない研究を行う。また、他の研究者の成果を尊重し、適切な引用を行う。 社会に貢献する：研究成果を社会に還元し、人々の健康や環境の改善に貢献する。また、社会的な問題を解決するために、自分の専門分野を超えた取り組みにも積極的に参加する。 オープンな研究環境を支持する：知識やデータの共有を積極的に支援し、オープンな研究環境を推進する。また、研究成果の公正な評価と透明性を確保するために、公正な査読プロセスに参加する。 自己研鑽を継続する：自己研鑽を継続し、常に最先端の知識や技術を取り入れる。また、自分の研究成果に対する批判的な態度を持ち、常に改善を意識していく。 科学に対し、誠実で責任ある態度を持ち、社会に貢献し、健全な科学の発展を願う。\nサイトマップ # ホーム 本サイトについて 著者について 来歴 研究・開発 講演・口頭発表等 受賞 [調整中] 投稿一覧 カテゴリ別 Linux Project 日記 公開データ 宣誓する上で日本学術振興会 「科学の健全な発展のために －誠実な科学者の心得－」( PDF)を参考にした。\u0026#160;\u0026#x21a9;\u0026#xfe0e;","title":"ddd3hLabへようこそ"},{"content":"","date":"0001年 1月 1日","permalink":"/research/","section":"Researches","summary":"","title":"Researches"},{"content":" Date Title Key 2022-01-08 Findings gained through computational physics Report Document 2023-02-08 Python講座_slide スライド 資料 ","date":"0001年 1月 1日","permalink":"/data/","section":"","summary":" Date Title Key 2022-01-08 Findings gained through computational physics Report Document 2023-02-08 Python講座_slide スライド 資料 ","title":"データ"},{"content":" オゾンと放射線の関わりを解き明かす—ANCO-Project # Uncovering the relationship between ozone and radiation―ANCO-Project # 会議発表論文\r足立 恭果 , 石﨑 大貴 , 佐藤 正騎 , 須田 亮介 , 清本 拓人 , 西濱 大将 , 宮崎 剛 , 蛯澤 悠 , 宇井 瞭介 , 飯田 和大 , 金子 尚広 , 徳光 和哉 , 大塲 翔悟 , 勝野 太智 , 山本 大凱 , 川瀬 幹己\nADACHI Kyoka , ISHIZAKI Taiki , SATO Masaki , SUDA Ryosuke , KIYOMOTO Takuto , NISHIHAMA Daisuke , MIYAZAKI Tsuyoshi , EBISAWA Yu , UI Ryosuke , IIDA Kazuhiro , KANEKO Takahiro , TOKUMITSU Kazuya , OBA Shogo , KATSUNO Taichi , YAMAMOTO Taiga , KAWASE Motoki\n大気球シンポジウム: 2022年度/Balloon Symposium: 2022, (2022-11) , 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン)) , Balloon Symposium 2022 (November 7-8, 2022. Hybrid(in-person \u0026amp; online) Conference (Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency (JAXA)(ISAS)), Sagamihara, Kanagawa Japan , 資料番号: SA6000177041 , レポート番号: isas22-sbs-041\nアイテムタイプ 会議発表論文 / Conference Paper 言語 日本語 その他のタイトル（英） Uncovering the relationship between ozone and radiation―ANCO-Project 著者 足立 恭果 石﨑 大貴 佐藤 正騎 須田 亮介 清本 拓人 西濱 大将 宮崎 剛 蛯澤 悠 宇井 瞭介 飯田 和大 金子 尚広 徳光 和哉 大塲 翔悟 勝野 太智 山本 大凱 川瀬 幹己 著者（英） ADACHI Kyoka ISHIZAKI Taiki SATO Masaki SUDA Ryosuke KIYOMOTO Takuto NISHIHAMA Daisuke MIYAZAKI Tsuyoshi EBISAWA Yu UI Ryosuke IIDA Kazuhiro KANEKO Takahiro TOKUMITSU Kazuya OBA Shogo KATSUNO Taichi YAMAMOTO Taiga KAWASE Motoki 著者所属 名古屋大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋工業大学 著者所属（英） Nagoya University Saitama University Saitama University Saitama University Saitama University Saitama University Saitama University Saitama University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya Institute of Technology 出版者 宇宙航空研究開発機構宇宙科学研究所(JAXA)(ISAS) 出版者（英） Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency(JAXA)(ISAS) 雑誌名 大気球シンポジウム: 2022年度 雑誌名(英) Balloon Symposium: 2022 発行年 Nov-22 会議概要（会議名, 開催地, 会期, 主催者等） 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン)) 会議概要（会議名, 開催地, 会期, 主催者等）（英） Balloon Symposium 2022 (November 7-8, 2022. Hybrid(in-person \u0026amp; online) Conference (Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency (JAXA)(ISAS)), Sagamihara, Kanagawa Japan 内容記述 著者人数: 16名 著者版フラグ author 資料番号 資料番号: SA6000177041 レポート番号 レポート番号: isas22-sbs-041 ","date":"0001年 1月 1日","permalink":"/research/anco/","section":"Researches","summary":"オゾンと放射線の関わりを解き明かす—ANCO-Project # Uncovering the relationship between ozone and radiation―ANCO-Project # 会議発表論文\r足立 恭果 , 石﨑 大貴 , 佐藤 正騎 , 須田 亮介 , 清本 拓人 , 西濱 大将 , 宮崎 剛 , 蛯澤 悠 , 宇井 瞭介 , 飯田 和大 , 金子 尚広 , 徳光 和哉 , 大塲 翔悟 , 勝野 太智 , 山本 大凱 , 川瀬 幹己","title":"オゾンと放射線の関わりを解き明かす—ANCO-Project"},{"content":" 研究 # 潮汐力と気圧の関係に関する研究, Saitama University - (2022.03), PDF (2MB) スペースバルーンを用いた成層圏の高エネルギー現象の解明研究, Saitama University - (2023.03), PDF (1.2MB) 開発 # ハイブリットロケットのノーズ部分にピトー管を付け対気速度を測定するシステムの開発 CORE - (2021.03) PDF (35.4MB) MATLABで既に開発が進んでいた飛翔シュミレーション「FROGS」のPython版「FOPY」の開発 CORE – (2021.06) 機械学習等を用いずセンサーによる0mゴールのアルゴリズムの開発を行い、2022年4月にその有効性を示す, AKTK - (2022.04), PDF (3.9MB) スペースバルーンプロジェクト「ANCO-project」にて使用する受信データをGUI表示するプログラムの開発, AKTK - (2022.09), GitHub ","date":"0001年 1月 1日","permalink":"/author/res-dev/","section":"Authors","summary":"研究 # 潮汐力と気圧の関係に関する研究, Saitama University - (2022.03), PDF (2MB) スペースバルーンを用いた成層圏の高エネルギー現象の解明研究, Saitama University - (2023.03), PDF (1.2MB) 開発 # ハイブリットロケットのノーズ部分にピトー管を付け対気速度を測定するシステムの開発 CORE - (2021.03) PDF (35.4MB) MATLABで既に開発が進んでいた飛翔シュミレーション「FROGS」のPython版「FOPY」の開発 CORE – (2021.06) 機械学習等を用いずセンサーによる0mゴールのアルゴリズムの開発を行い、2022年4月にその有効性を示す, AKTK - (2022.","title":"研究・開発"},{"content":" オゾンと放射線の関わりを解き明かす—ANCO-Project (2022.11)\n宇宙航空研究開発機構宇宙科学研究所(JAXA)(ISAS) 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン))\n理学部学生にとても役立つ『Python講座』- 埼玉大学 (2023.02)\n埼玉大学理工研・理学部／HiSEP・HiSEP-6 招待 ","date":"0001年 1月 1日","permalink":"/author/presentation/","section":"Authors","summary":" オゾンと放射線の関わりを解き明かす—ANCO-Project (2022.11)\n宇宙航空研究開発機構宇宙科学研究所(JAXA)(ISAS) 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン))\n理学部学生にとても役立つ『Python講座』- 埼玉大学 (2023.02)\n埼玉大学理工研・理学部／HiSEP・HiSEP-6 招待 ","title":"講演・口頭発表等"},{"content":" 名前：西濱大将 (Daisuke NISHIHAMA)\n国籍：日本国\n所属：埼玉大学理学部物理学科\n専門：計算機天文学、宇宙物理学、計算物理、情報通信工学\nその他：\n来歴 研究・開発 講演・口頭発表等 受賞 連絡先 # 📧 Mail: daisukenishihama63@gmail.com\n🐦 Twitter: @daisuke0603\n🔗 Instagram: @daisukenishihama\n","date":"0001年 1月 1日","permalink":"/author/","section":"","summary":"名前：西濱大将 (Daisuke NISHIHAMA)\n国籍：日本国\n所属：埼玉大学理学部物理学科\n専門：計算機天文学、宇宙物理学、計算物理、情報通信工学\nその他：\n来歴 研究・開発 講演・口頭発表等 受賞 連絡先 # 📧 Mail: daisukenishihama63@gmail.com\n🐦 Twitter: @daisuke0603\n🔗 Instagram: @daisukenishihama","title":"西濱大将"},{"content":" 2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020 # 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021 # 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年10月 埼玉大学学生表彰受賞 2021年12月 CanSat機体「SC-2.1」PM 2022 # 2022年03月 株式会社MediHub IT顧問就任\n2022年04月 あかとき第3代代表に就任（2023年03月退任）\n2022年04月 CanSat機体「SC-11」電装班長\nチーム「翔ぶよ埼玉」で団体初のフライバック部門に第18回能代宇宙イベントに参加した。 【あかとき】第18回能代宇宙イベントPV - YouTube　3 2022年05月 ANCO-project 電装班、GUI化プロジェクトPM\n2022年09月 ANCO-projectにて、スペースバルーンを用いて独自開発した放射検出器を使用し、成層圏の宇宙線とオゾン濃度を測定し、そのメカニズム解明を行う。\nJAXA/ISASにて発表 2022年12月 伊豆大島共同打上実験運営 CanSat担当\n安全管理上の理由により中止 2023 # 2023年03月 ANCO-project 通信班 開発執行責任者 就任 2023年04月 宇宙物理学実験研究室配属 指導教員：田代 信、寺田 幸功、佐藤 浩介、勝田 哲 正式名称は「埼玉大学宇宙工学サークルあかとき」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n正式名称は「Challengers of Rocket Engineering」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n著書が作成した本プロジェクトに関する広報動画。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"0001年 1月 1日","permalink":"/author/cv/","section":"Authors","summary":"2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020 # 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021 # 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年10月 埼玉大学学生表彰受賞 2021年12月 CanSat機体「SC-2.","title":"来歴"},{"content":" 講義資料\r日時：2023年2月８日（水）６限　18:00-19:30PM　教室：理学部8番教室（予定）\n指導担当：理学部物理学科　西濱 大将　さんほか\n理学部に在学中のすべての皆さんを対象とします。但し2年生以上を優先し、参加者が5名に満たない場合は中止する予定ですので了承ください。　参加希望者は資料作成のため人数確認をしたいとおもいます。講座実施前キャンセル可ですので、以下から受講登録をお願いします。\nhttps://forms.gle/oFbTUXCGUGiG29tt8\n参加に当たっては各自ＰＣを持参ください。なお、この講座が効果的であれば、引き続き、別日程で第2回応用編講座を開催する予定です。\n主催： 埼玉大学理工研・理学部／HiSEP・HiSEP-6\n問い合わせ：HiSEP支援室　hisep.saitama@gmail.com\n","date":"0001年 1月 1日","permalink":"/research/python-saitama-uni/","section":"Researches","summary":"講義資料\r日時：2023年2月８日（水）６限　18:00-19:30PM　教室：理学部8番教室（予定）\n指導担当：理学部物理学科　西濱 大将　さんほか\n理学部に在学中のすべての皆さんを対象とします。但し2年生以上を優先し、参加者が5名に満たない場合は中止する予定ですので了承ください。　参加希望者は資料作成のため人数確認をしたいとおもいます。講座実施前キャンセル可ですので、以下から受講登録をお願いします。\nhttps://forms.gle/oFbTUXCGUGiG29tt8\n参加に当たっては各自ＰＣを持参ください。なお、この講座が効果的であれば、引き続き、別日程で第2回応用編講座を開催する予定です。\n主催： 埼玉大学理工研・理学部／HiSEP・HiSEP-6\n問い合わせ：HiSEP支援室　hisep.saitama@gmail.com","title":"理学部学生にとても役立つ『Python講座』- 埼玉大学"}]