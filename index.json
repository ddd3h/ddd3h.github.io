[{"content":"Author: Daisuke NISHIHAMA\nAbout Me ","date":"2023年 3月 13日","permalink":"/","section":"","summary":"Author: Daisuke NISHIHAMA\nAbout Me ","title":""},{"content":"","date":"2023年 3月 13日","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"\u0026ldquo;HEAsoft\u0026quot;って何？\u003e \u0026ldquo;HEAsoft\u0026quot;って何？ # HEAsoftは、高エネルギー天体物理学に関連するデータ解析ソフトウェアのパッケージです。このパッケージには、NASAの多くのX線天文衛星ミッションで使用されるデータ解析ソフトウェアが含まれています。たとえば、Chandra X線天文台、XMM-Newton、Suzakuなどが挙げられます。\nHEAsoftには、X線天文学に関する多くのツールが含まれており、X線スペクトルの分析、背景の推定、画像処理、時系列解析などが可能です。HEAsoftは、主にUNIXベースのシステムで動作することが意図されていますが、WindowsやMac OS Xなどのプラットフォームでも使用することができます。\nHEAsoftは、NASAの高エネルギー天体物理学の研究者や、天文学者、物理学者、コンピューターサイエンティスト、その他の関連分野の研究者によって使用されています。\nhttp://heasarc.gsfc.nasa.gov/docs/software.html\nダウンロード\u003e ダウンロード # NASAのサイトからHEAsoftのSource Codeをダウンロードする。ダウンロードサイトは https://heasarc.gsfc.nasa.gov/docs/software/lheasoft/download.html\nダウンロードサイトで\nSTEP1：適切な自分のPC環境を選ぶ。\nSTEP2：個々のミッションファイルを選ぶ。今後、様々な衛星データを扱う予定ならば「All」でよい。\n以上が完了したら「Submit」\n「tar.gz」ファイルがダウンロードされる。\ntar.gzファイルはtarが非圧縮でファイルをひとまとまりにするもの、gzは圧縮。\nダウンロード時間（１〜２時間かかる）は長いのでコーヒーブレイクでも楽しむと良い。\n下に載せたやり方であれば5分足らずで完了する。 あまりにも遅い場合、国内サーバーにUbuntuのバージョンのみではあるが、（期間限定で）サーバー上においておくので、そこからダウンロードしてもよい。\nやりかた\nターミナルで以下のコマンド2行を実行する wget --keep-session-cookies --save-cookies=\u0026#34;cookies.txt\u0026#34; \u0026#34;https://20.gigafile.nu/0621-le3295726dd5b0b45503e5823972cde05\u0026#34; wget --load-cookies \u0026#34;cookies.txt\u0026#34; -O \u0026#34;heasoft-6.31.1src.tar.gz\u0026#34; \u0026#34;https://20.gigafile.nu/download.php?file=0621-le3295726dd5b0b45503e5823972cde05\u0026#34; URLの有効期限は2023/6/21です。これ以降ダウンロードされる場合は管理者にご連絡ください。 以下のコマンドでファイルを展開します。\ntar xzvf \u0026#34;heasoft-6.31.1src.tar.gz\u0026#34; heasoft-6.31.1というディレクトリができていることを確認しましょう。\nBUILD_DIRに移動して、インストールを開始します。\ncd heasoft-6.31.1/BUILD_DIR TXTファイルにDUMPする人もいますが、別にエラーなんてその場で見てください。なのでDUMPなんかせず、ただ単に実行します。\n./configure 私の場合は次のエラーが出ました。\nconfigure: error: Required file /usr/include/X11/Xlib.h not found!\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! Ubuntu 22.04 LTS以降ではデフォルトでGUI(X Window System)やデスクトップ環境が入っていません。なぜこういう古いシステムが好きなんですかね。。。\n次のコマンドを実行してインストールします。\nsudo apt install xorg-dev エラーを解消したら再度、./configureと実行してください。\n再度、私は次のようなエラーが出ました。\nconfigure: error: AstroPy unavailable but required for HEASoftPy\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! AstorPyつまりPythonのライブラリが入ってなかったようです。なのでご自分のPython環境に合わせてインストールしてください。\npip install astropy エラーを解消すると次Scipyです。。。「自動でインストールシステム作れ」と怒りたくなりますが、根気よくインストールしていきます。こちらもPythonですので、上同様に実行してください。\n念の為、やり方は\npip install scipy またこんなエラーがでました。。。\nconfigure: error: No curses header-files found\rconfigure: error: Configure failed for heacore component lynx!\rconfigure: error: Configure failed in /home/daisuke/heasoft-6.31.1/heacore/BUILD_DIR! たぶんですが一行目にこういったエラーが出たということで予想ですが次のように実行して、エラー祭りを回避します。\nsudo apt install libreadline-dev libcurl4 libcurl4-gnutls-dev libncurses5-dev Finishedが出れば完了です。次のステップに行きましょう。\nMakeコマンドでコンパイルをします。おそらく、configureを通っているのでエラーは無いと思います。ここでもDUMPせずに進みます。\nmake インストールをします。\nmake install Pathの設定をする（daisukeはユーザー名ですので適宜変更してください。）\nexport HEADAS=/home/daisuke/heasoft-6.31.1/x86_64-pc-linux-gnu-libc2.35 . $HEADAS/headas-init.sh alias heainit=\u0026#34;. $HEADAS/headas-init.sh\u0026#34; heainit .bashrc等にでも書いておくといい．実際に動くはfvと入力して動けば動くということである．\nHEAsoftの使い方\u003e HEAsoftの使い方 # HEAsoftは、複数のツールやプログラムから構成されるパッケージであり、使い方は多岐にわたります。ここでは、HEAsoftを使用してX線データのスペクトル解析を行う方法を簡単に紹介します。\nHEAsoftのインストール\nまず、HEAsoftをインストールする必要があります。HEAsoftは、次のURLからダウンロードできます。 https://heasarc.gsfc.nasa.gov/lheasoft/download.html\nデータの準備\nHEAsoftを使用してX線スペクトル解析を行うためには、X線データが必要です。これらのデータは、Chandra、XMM-Newton、SuzakuなどのX線天文衛星で観測されたものである必要があります。また、X線スペクトル解析には、バックグラウンドデータも必要です。バックグラウンドデータは、観測領域外の領域から取得する必要があります。\nXSELECTの起動\nXSELECTは、HEAsoftに含まれるツールの一つで、X線データを選択するためのツールです。次のコマンドでXSELECTを起動します。\nxselect データの読み込み\nXSELECTを起動したら、次のように入力します。\n\u0026gt; read events \u0026lt;event file\u0026gt; \u0026gt; read event.txt \u0026gt; read background \u0026lt;background file\u0026gt; \u0026gt; read background.txt ここで、は、解析対象のX線データのファイル名を指定します。同様に、は、バックグラウンドデータのファイル名を指定します。上記の例では、データとバックグラウンドのファイルは、event.txtとbackground.txtという名前で保存されていると仮定しています。\nフィルタリング\nXSELECTを使用して、不要なデータを除外することができます。たとえば、不要な時間帯、エネルギー範囲などを除外することができます。次のように入力します。\n\u0026gt; filter time \u0026lt;start\u0026gt; \u0026lt;stop\u0026gt; \u0026gt; filter pha_cutoff \u0026lt;min\u0026gt; \u0026lt;max\u0026gt; ここで、とは、データの開始時刻と終了時刻を表します。とは、エネルギーの最小値と最大値を表します。\nスペクトルの抽出\n次に、スペクトルを抽出します。次のように入力します。\n\u0026gt; extract spec これに続けて、背景のスペクトルを抽出します。次のように入力します。\n\u0026gt; extract bkg スペクトルの解析\nスペクトルを抽出したら、XSPECを使用してスペクトル解析を行います。次のように入力します。\n\u0026gt; xspec XSPECが起動したら、次のように入力してスペクトルファイルを読み込みます。\nXSPEC\u0026gt; data \u0026lt;spec file\u0026gt;\rXSPEC\u0026gt; backgrnd \u0026lt;bkg file\u0026gt; ここで、\u0026lt;spec file\u0026gt;と\u0026lt;bkg file\u0026gt;は、それぞれ抽出したスペクトルと背景のファイル名を指定します。\n次に、モデルを選択します。モデルは、解析する現象に応じて選択する必要があります。例えば、ブラックホールや中性子星のスペクトルの場合は、ブラックボディ放射やブレーズ・トンモデルが一般的に使用されます。モデルを選択したら、次のように入力します。\nXSPEC\u0026gt; model \u0026lt;model name\u0026gt; ここで、は、選択したモデルの名前を指定します。\n最後に、フィットを実行して、パラメータを求めます。次のように入力します。\nXSPEC\u0026gt; fit フィットが終了したら、次のように入力して結果を確認します。\nXSPEC\u0026gt; show fit 以上が、HEAsoftの使い方です．\n","date":"2023年 3月 13日","permalink":"/posts/linux/cosmic_tips/","section":"Posts","summary":"\u0026ldquo;HEAsoft\u0026quot;って何？\u003e \u0026ldquo;HEAsoft\u0026quot;って何？ # HEAsoftは、高エネルギー天体物理学に関連するデータ解析ソフトウェアのパッケージです。このパッケージには、NASAの多くのX線天文衛星ミッションで使用されるデータ解析ソフトウェアが含まれています。たとえば、Chandra X線天文台、XMM-Newton、Suzakuなどが挙げられます。\nHEAsoftには、X線天文学に関する多くのツールが含まれており、X線スペクトルの分析、背景の推定、画像処理、時系列解析などが可能です。HEAsoftは、主にUNIXベースのシステムで動作することが意図されていますが、WindowsやMac OS Xなどのプラットフォームでも使用することができます。\nHEAsoftは、NASAの高エネルギー天体物理学の研究者や、天文学者、物理学者、コンピューターサイエンティスト、その他の関連分野の研究者によって使用されています。\nhttp://heasarc.gsfc.nasa.gov/docs/software.html\nダウンロード\u003e ダウンロード # NASAのサイトからHEAsoftのSource Codeをダウンロードする。ダウンロードサイトは https://heasarc.gsfc.nasa.gov/docs/software/lheasoft/download.html\nダウンロードサイトで\nSTEP1：適切な自分のPC環境を選ぶ。\nSTEP2：個々のミッションファイルを選ぶ。今後、様々な衛星データを扱う予定ならば「All」でよい。\n以上が完了したら「Submit」\n「tar.gz」ファイルがダウンロードされる。\ntar.gzファイルはtarが非圧縮でファイルをひとまとまりにするもの、gzは圧縮。\nダウンロード時間（１〜２時間かかる）は長いのでコーヒーブレイクでも楽しむと良い。\n下に載せたやり方であれば5分足らずで完了する。 あまりにも遅い場合、国内サーバーにUbuntuのバージョンのみではあるが、（期間限定で）サーバー上においておくので、そこからダウンロードしてもよい。\nやりかた\nターミナルで以下のコマンド2行を実行する wget --keep-session-cookies --save-cookies=\u0026#34;cookies.txt\u0026#34; \u0026#34;https://20.","title":"HEAsoftのインストール"},{"content":"","date":"2023年 3月 13日","permalink":"/tags/linux/","section":"Tags","summary":"","title":"linux"},{"content":"","date":"2023年 3月 13日","permalink":"/categories/linux/","section":"Categories","summary":"","title":"Linux"},{"content":"","date":"2023年 3月 13日","permalink":"/posts/","section":"Posts","summary":"","title":"Posts"},{"content":"","date":"2023年 3月 13日","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"※ Windowsの方はTeXstudioを脳筋でインストールしてコンパイラ設定とビルド設定していただけば使えます。また、後日、通常のコンパイル速度の10倍高速にコンパイルできる方法の記事を上げたいと思います。\n新しくMac/Linuxを用意したのなら\u003e 新しくMac/Linuxを用意したのなら # MacTeXをインストールします\nMacTeX - TeX Users Group\nTeXstudioをIDEとしていつも使用しているのですが、残念ながら最新版のv4.3.1はなぜか、Google日本語入力での入力ができません（Mac純正のIMEをご利用の方は気にせず最新版をインストールしてください）。\nそこでv3.1.2をインストールすることにしました（このバージョンに特段理由はありません）。こちらからダウンロードできます。\nTeXstudio - A LaTeX Editor - Browse /3.1.2 at SourceForge.net\n最新版はこちらです。\nhttps://www.texstudio.org/\nTeXstudioの設定\u003e TeXstudioの設定 # コンパイルシステムの変更\u003e コンパイルシステムの変更 # ダウンロードが完了したら、TeXstudio \u0026gt; 環境設定 \u0026gt; コマンド からLaTeXのコンパイルシステムをplatexに変更します。設定は以下のように変更します。\nplatex -synctex=1 -interaction=nonstopmode %.tex uplatex等でもいいですし、Latexでもいいと思いますが、基本的に日本語を入力する場合は、高速にコンパイルできるplatexをオススメします。\nビルドの変更\u003e ビルドの変更 # 環境設定の中の「ビルド＆表示」を「DVI-\u0026gt;PDFチェーン」にします。\n「規定のコンパイラ」が「LaTeX」でない場合は、変更します。\n組み込みPDFビュアーで日本語を見れるようにする\u003e 組み込みPDFビュアーで日本語を見れるようにする # 次に組み込みPDFビュアーで日本語を表示できるようにします。以下のコマンドでpopplerというPDFドキュメントの閲覧エンジンの場所が分かります。\nstrings -a /Applications/texstudio.app/Contents/Frameworks/libpoppler.*.dylib | grep poppler このコマンドでどこにあるかが表示されます。それに合わせて、poppler-dataをダウンロードしましょう。私は次のように表示されました。\n/usr/local/Cellar/poppler/21.05.0/share/poppler Unknown CID font collection, please report to poppler bugzilla. %Produced by poppler pdftops version: {0:s} ([http://poppler.freedesktop.org](http://poppler.freedesktop.org/)) 一行目をよく覚えておきましょう！\npoppler-dataは、最新版が0.4.11です(2022年9月現在)。なので、poppler-data-0.4.11.tar.gzをダウンロードしましょう。\ncurl -kO https://poppler.freedesktop.org/poppler-data-0.4.11.tar.gz tar xvf poppler-data-0.4.11.tar.gz これで、poppler-dataをダウンロードし、展開することができました。\n次に先程覚えてもらった場所に、以下のコマンドでフォルダを作成して、poppler-dataをコピーします。\nsudo mkdir -p /usr/local/Cellar/poppler/21.05.0/share/poppler sudo cp -pR ~/poppler-data-0.4.11/* /usr/local/Cellar/poppler/21.05.0/share/poppler これが完了したら、ダウンロードフォルダーにあるpoppler-dataは削除していただいて結構です。TeXstudioを開くと日本語がPDFビュアーに表示されると思います。\nスタイルをよくする\u003e スタイルをよくする # ここでは私好みにテーマ等を変更する方法を教えます。\nスタイルはOrion Darkにして行の折り返しを以下のように設定します．\n行の折り返しで「最大文字数」に設定することで，TeXstudioのバグを克服しています．\nバックスラッシュ「\\」で自動補完が使えない方へ\u003e バックスラッシュ「\\」で自動補完が使えない方へ # 私は今回からUSキーボードにしたのでこの問題は解消されました。しかし、大半の方はJISキーボードでしょうから、もしかしたら、バックスラッシュを押しても自動補完がされないかもしれません。\nそこで「karabiner-elements」をインストールして「￥」と「＼」を置換します。\nここから最新版をインストールしてください。\nhttps://karabiner-elements.pqrs.org/\n設定\u003e 設定 # Preferences の Complex Modifications のタブを開き、 画面下の \u0026ldquo;Add rule\u0026rdquo; をおすとダイアログが表示されるので、 ダイアログ上部の \u0026ldquo;Import more rules from internet (open a web browser)\u0026rdquo; ボタンを押します。\nそうすると、予め準備されたルール一覧のページがブラウザで表示されるので、\u0026ldquo;Swap ¥ and \\ always on JIS Keyboards\u0026rdquo; というルールを探して、そのルールの \u0026ldquo;Import\u0026rdquo; ボタンを押します。\nKarabiner-Elements.app を開くかどうかのポップアップが表示されるので、 \u0026ldquo;Karabiner-Elements.app を開く\u0026rdquo; ボタンを押します。\nボタンを押すと、Karabiner-Elements 側で import するか聞かれるので、\u0026ldquo;Import\u0026rdquo; ボタンを押します。\nImportを行うと、もともと例として表示されている3つのルールの下に、 \u0026ldquo;Swap ¥ and \\ always on JIS Keyboards\u0026rdquo; ルールの2つのサブルールが表示されるので、 \u0026ldquo;Enable All\u0026rdquo; ボタンを押して、2つともEnableにしてください。\nこれで完了です。\n","date":"2022年 9月 13日","permalink":"/posts/2022-09-13/","section":"Posts","summary":"※ Windowsの方はTeXstudioを脳筋でインストールしてコンパイラ設定とビルド設定していただけば使えます。また、後日、通常のコンパイル速度の10倍高速にコンパイルできる方法の記事を上げたいと思います。\n新しくMac/Linuxを用意したのなら\u003e 新しくMac/Linuxを用意したのなら # MacTeXをインストールします\nMacTeX - TeX Users Group\nTeXstudioをIDEとしていつも使用しているのですが、残念ながら最新版のv4.3.1はなぜか、Google日本語入力での入力ができません（Mac純正のIMEをご利用の方は気にせず最新版をインストールしてください）。\nそこでv3.1.2をインストールすることにしました（このバージョンに特段理由はありません）。こちらからダウンロードできます。\nTeXstudio - A LaTeX Editor - Browse /3.1.2 at SourceForge.net\n最新版はこちらです。\nhttps://www.texstudio.org/\nTeXstudioの設定\u003e TeXstudioの設定 # コンパイルシステムの変更\u003e コンパイルシステムの変更 # ダウンロードが完了したら、TeXstudio \u0026gt; 環境設定 \u0026gt; コマンド からLaTeXのコンパイルシステムをplatexに変更します。設定は以下のように変更します。","title":"TeX打ちの最高環境を構築したい"},{"content":"","date":"2022年 9月 13日","permalink":"/tags/%E6%97%A5%E8%A8%98/","section":"Tags","summary":"","title":"日記"},{"content":"","date":"2022年 9月 13日","permalink":"/categories/%E6%97%A5%E8%A8%98/","section":"Categories","summary":"","title":"日記"},{"content":"さていつものように brew install fish をしてみるが、残念ながら買ったばっかりのMacにはHomebrewは入っていない。\nHomebrewをインストールする\u003e Homebrewをインストールする # そこでHomebrewのインストールから始めなくてはいけない。\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;``` HomebrewはMacユーザーにとっては便利なツールであるからインストールしておいて損はないだろう。\nさて、インストールできたらここからが本番である。\n私のMacはすでにデフォルトでZshが採用されている．以前のMacではBashを使い続け、Appleからの「Zshに変更しましょう」みたいなやつを無視し続けてきた。\n（こういうところで「新しい」Macというのを感じることになるとは……）\nさてインストールが完了するとこんなエラーが出た。\nWarning: /opt/homebrew/bin is not in your PATH. Instructions on how to configure your shell for Homebrew can be found in the \u0026#39;Next steps\u0026#39; section below. ==\u0026gt; Installation successful! ==\u0026gt; Homebrew has enabled anonymous aggregate formulae and cask analytics. Read the analytics documentation (and how to opt-out) here: https://docs.brew.sh/Analytics No analytics data has been sent yet (nor will any be during this install run). ==\u0026gt; Homebrew is run entirely by unpaid volunteers. Please consider donating: https://github.com/Homebrew/brew#donations ==\u0026gt; Next steps: - Run these two commands in your terminal to add Homebrew to your PATH: echo \u0026#39;eval \u0026#34;$(/opt/homebrew/bin/brew shellenv)\u0026#34;\u0026#39; \u0026gt;\u0026gt; /Users/daisuke/.zprofile eval \u0026#34;$(/opt/homebrew/bin/brew shellenv)\u0026#34; - Run brew help to get started - Further documentation: https://docs.brew.sh PATHが通らなかったらしい。とりあえず，PATHを通そう。\nここでzshにはbashと同様に .zshrc と zprofile という2つが存在する。zshrcはログインシェルとインタラクティブシェルの場合だけ読み込まれる。 zprofile はログインシェルの場合に１度だけ読み込まれる。\nvi ~/.zprofile この中に\nexport PATH=/opt/homebrew/bin:$PATH を最終行に追記してください。\nようやくfishをインストール。\u003e ようやくfishをインストール。 # さてbrewをインストールすることができたのでfishをインストールするぞ。\nあ、自分でPathを通しておいて気づきませんでしたが、brewは、Apple Siliconでは /opt/homebrew/bin/brew にあるそうです。\nまじかよ。。。\nそれが本当に最適かどうかは分からないのですが、とりあえずfishを動かすためにshellのPathを変更します。\nsudo vi /etc/shells # 末尾に /opt/homebrew/bin/fish を追加 chsh -s /opt/homebrew/bin/fish 自分はHyperをターミナルに使用しているのですが、Mac本体の再起動が必要そうです。\n同じようにGitHubで嘆いている人を見かけたのですが、論破されてました。\nIn the words of my school IT director, \u0026ldquo;did you doa restart?”\nHyper doesn\u0026rsquo;t use default shell on MacOS · Issue #4266 · vercel/hyper\n本当にそうですね。同じように問題が起こった人は、再起動をしましょう。\nこの後、fish側の環境変数やらの設定をしましょう。\n同じことを２度もしてるような感じもするので、面倒臭ければzshをdefaultのshellにして、起動とともにfishを起動するようにしてもいいかも知れません。\nfishの設定は ~/.config/fish/config.fish に記述します。\n私はPython等の都合もあり、以下のようにしました。\nif status is-interactive # Commands to run in interactive sessions can go here set -x PATH /opt/homebrew/bin $PATH set -x PATH /Library/Frameworks/Python.framework/Versions/3.10/bin $PATH alias python \u0026#39;python3\u0026#39; alias pip \u0026#39;pip3\u0026#39; end これを書いた後は、fishをより便利におしゃれにしていきます。\n自分好みのfishに変更する\u003e 自分好みのfishに変更する # 私は oh-my-fish のテーマを使います。\nフォントもそれに対応したものをインストールしましょう。\nインストールが完了したら、使用されてるターミナルからフォントを変更してください。\nfisher install oh-my-fish/theme-bobthefish git clone https://github.com/powerline/fonts.git cd fonts ./install.sh cd rm -rf ./fonts パッケージマネジャーfisherをインストールする\u003e パッケージマネジャーfisherをインストールする # fisherは便利なので入れとくといいです。\ncurl https://git.io/fisher --create-dirs -sLo ~/.config/fish/functions/fisher.fish プラグインをインストールする\u003e プラグインをインストールする # z\u003e z # 今回はディレクトリの履歴から検索して表示してくれるzというプラグインのみを入れます。めちゃ便利です。\nbrew install z fisher install jethrokuan/z 頑張った成果を見よう\u003e 頑張った成果を見よう # Apple Siliconの環境設定頑張ったので\nfisher install laughedelic/fish_logo fish_logo をして達成感を味わいましょう笑\n___ ___======____=---=) /T \\_--===) [ \\ (O) \\~ \\_-==) \\ / )J~~ \\-=) \\\\___/ )JJ~~~ \\) \\_____/JJJ~~~~ \\ / \\ , \\J~~~~~ \\ (-\\)\\=|\\\\\\~~~~ L__ (\\\\) (\\\\\\)_ \\==__ \\V \\\\\\) ===_____ \\\\\\\\\\\\ \\V) \\_) \\\\\\\\JJ\\J\\) /J\\JT\\JJJJ) (JJJ| \\UUU) ","date":"2022年 9月 12日","permalink":"/posts/2022-09-12/","section":"Posts","summary":"さていつものように brew install fish をしてみるが、残念ながら買ったばっかりのMacにはHomebrewは入っていない。\nHomebrewをインストールする\u003e Homebrewをインストールする # そこでHomebrewのインストールから始めなくてはいけない。\n/bin/bash -c \u0026#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)\u0026#34;``` HomebrewはMacユーザーにとっては便利なツールであるからインストールしておいて損はないだろう。\nさて、インストールできたらここからが本番である。\n私のMacはすでにデフォルトでZshが採用されている．以前のMacではBashを使い続け、Appleからの「Zshに変更しましょう」みたいなやつを無視し続けてきた。\n（こういうところで「新しい」Macというのを感じることになるとは……）\nさてインストールが完了するとこんなエラーが出た。\nWarning: /opt/homebrew/bin is not in your PATH. Instructions on how to configure your shell for Homebrew can be found in the \u0026#39;Next steps\u0026#39; section below.","title":"便利なFish Shellをインストールしよう"},{"content":" タイムトラベルという言葉を用いるとき，ときどき半半ば強引に「相対論によると」光速に近ければ時間は遅くなるという話が存在する．確かに光速で進む物体の時間は静止系よりも時間がゆっくり進むことになるし，一種のタイムトラベルとも言えそうである．\nしかし，双子のパラドックスという概念を引き合いにしてその理屈はおかしいと主張する人が少数いる．\n実際どうなのか検討する記事である．\nまず，結論を先に話すと双子のパラドックスの問題解消のために，一般相対論を出すものもいるが，一般相対論なんかを使わずとも特殊相対論で十分に解消できる．\nさらに，光速で進む物体の時間は静止系よりも時間がゆっくり進むし，慣性系に戻ってきても時間は相対的には遅れている．つまり，同い年だったのに数年後には10歳差ということもありうる．\n相対論の復習\u003e 相対論の復習 # 光速 \\(c\\) に近い速度で進む物体においてはNewtonの運動方程式は適応できない．このような状況では相対論的効果も考慮し，考えなくてはいけない．\n世界距離\u003e 世界距離 # 今回のタイトルでは「世界距離」という言葉を使わせていただいたが，書籍によっては「世界間隔」と表記するものも多い．どちらも同じことを指しているので本サイトでは前者で統一する．\n世界距離は四次元座標 \\(x^\\mu\\)，Minkowski計量 \\(\\eta_{\\mu \\nu}\\)を用いて\n$$ ds^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu $$\nと表せる．ここで地球に観測者がいる系を静止系と呼び，光速で移動している系を移動系ということにする．静止系において光速で移動している観測者を見るとその移動距離は \\(c^2 dt^2\\) であるから世界距離\n$$ d s^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu = - c^2 dt^2 + c^2 dt^2 = 0 $$\nがいえる．\nまた，移動系においては観測者は静止しているので世界距離\n$$ ds\u0026rsquo;^2 = \\eta_{\\mu \\nu} dx\u0026rsquo;^\\mu dx\u0026rsquo;^\\nu = 0 - c^2 dt\u0026rsquo;^2 $$\nがいえる．ただ世界距離はLorentz不変であるから\n$$ ds^2 = ds\u0026rsquo;^2 $$\nがいえる．ゆえに，\\(dt\u0026rsquo; = 0\\) がいえて時間は静止しているように見えることが分かる．\n双子のパラドックス\u003e 双子のパラドックス # ここでどんなパラドックスが生じるかといえば以上の議論はあくまでも相対的な事柄でしか無い．\nつまり，光速で移動している系（移動系）から地球を見れば地球が光速で移動しているわけである．つまり，移動系から見れば静止系の時間が止まっているし，静止系から見れば移動系の時間が止まっているのである．\nすなわち双子A, Bのうち片方Bだけが光速で地球から旅をして帰ってきたとき異なる時間を持つ（お互い相手の時計は止まってると思っている）二人が出会うため，矛盾が生じてしまう．これを双子パラドックスと呼んでいる．\n双子のパラドックスの解消\u003e 双子のパラドックスの解消 # これは単純な問題である．上の議論は特殊相対性原理に則っているため，慣性系でしか議論はできない．しかし，移動系は一旦，地球に戻るためにUターンもしくは減速を行うはずである．つまりこの際に慣性系は破れ加速度系となってしまう．\nゆえに，移動系から見てはいけないのだ．\n地球（静止系）は常に慣性系であるのでこちらで議論した結末は問題なく正しい．ゆえに，双子の片方Bは光速で移動しているため時間は静止しているため出発時と同じ年齢で時間は一切進まずに帰ってくる，というのが正解となる．\n一般相対論など不必要であるし，きちんと慣性系のみだけで議論すればいいだけの話である．\n相対論を用いてタイムトラベルを話すのは\u0026hellip;\u003e 相対論を用いてタイムトラベルを話すのは\u0026hellip; # タイムトラベルというのが何なのかの定義付けにはよるが，上で議論したように実際に移動した系とそうでない系で時間に隔たりができる．\nそれゆえ，タイムトラベルと呼ぶのは問題ないだろうし強引とまでは言い難いのかもしれない．\n","date":"2021年 9月 30日","permalink":"/posts/2021-09-30/","section":"Posts","summary":"タイムトラベルという言葉を用いるとき，ときどき半半ば強引に「相対論によると」光速に近ければ時間は遅くなるという話が存在する．確かに光速で進む物体の時間は静止系よりも時間がゆっくり進むことになるし，一種のタイムトラベルとも言えそうである．\nしかし，双子のパラドックスという概念を引き合いにしてその理屈はおかしいと主張する人が少数いる．\n実際どうなのか検討する記事である．\nまず，結論を先に話すと双子のパラドックスの問題解消のために，一般相対論を出すものもいるが，一般相対論なんかを使わずとも特殊相対論で十分に解消できる．\nさらに，光速で進む物体の時間は静止系よりも時間がゆっくり進むし，慣性系に戻ってきても時間は相対的には遅れている．つまり，同い年だったのに数年後には10歳差ということもありうる．\n相対論の復習\u003e 相対論の復習 # 光速 \\(c\\) に近い速度で進む物体においてはNewtonの運動方程式は適応できない．このような状況では相対論的効果も考慮し，考えなくてはいけない．\n世界距離\u003e 世界距離 # 今回のタイトルでは「世界距離」という言葉を使わせていただいたが，書籍によっては「世界間隔」と表記するものも多い．どちらも同じことを指しているので本サイトでは前者で統一する．\n世界距離は四次元座標 \\(x^\\mu\\)，Minkowski計量 \\(\\eta_{\\mu \\nu}\\)を用いて\n$$ ds^2 = \\eta_{\\mu \\nu} dx^\\mu dx^\\nu $$\nと表せる．ここで地球に観測者がいる系を静止系と呼び，光速で移動している系を移動系ということにする．静止系において光速で移動している観測者を見るとその移動距離は \\(c^2 dt^2\\) であるから世界距離","title":"相対論を用いてタイムトラベルを語るのは強引か？"},{"content":"ddd3hLab（本サイト）は、物理学徒が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開したりするサイトである。\n著者は、西濱 大将（にしはま だいすけ、Daisuke NISHIHAMA）で、専門は宇宙理論物理学、宇宙実験物理学、数値解析、電子回路設計、情報通信工学である。\n来歴\u003e 来歴 # 2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用する。 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設。 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年12月 CanSat機体「SC-2.1」PM 2022年03月 株式会社MediHub IT顧問就任 2022年04月 あかとき第3代代表に就任（2023年03月退任） 2022年04月 CanSat機体「SC-11」電装班長 チーム「翔ぶよ埼玉」で団体初のフライバック部門に第18回能代宇宙イベントに参加した。 【あかとき】第18回能代宇宙イベントPV - YouTube　3 2022年05月 スペースバルーン「ANCO-project」電装班兼、GUIプロジェクトPM 2022年09月 ANCO-projectにて、スペースバルーンを用いて独自開発した放射検出器を使用し、成層圏の宇宙線とオゾン濃度を測定し、そのメカニズム解明を行う。 2022年12月 伊豆大島共同打上実験 運営CanSat担当 実績\u003e 実績 # 開発\u003e 開発 # Simulation Software FROGS Python ver., CORE – (2020)\nMATLABで既に開発が進んでいた飛翔シュミレーション「FROGS」をPython版で開発を行った。\nStudy on relationship between tidal force and atmosphereic pressure, Saitama University – (2021)\n2021年に投稿した潮汐力と気圧の関係に関する研究。\nDevelopment of algorithm for 0m goal of CanSat by various sensors, AKTK – (2022)\nセンサーによる0 mゴール用のアルゴリズムの開発を行い、2022年4月にその有効性を示した。\nDevelopment of a GUI display of comprehensive received data, AKTK – (2022)\nスペースバルーンプロジェクト「ANCO-project」にて使用する受信データをGUI表示するプログラムの開発を行った。\n研究\u003e 研究 # 調整中 技術\u003e 技術 # 主力プログラミング言語は、Python4、C言語5、C++6、Julia7 である。\n講演・口頭発表等\u003e 講演・口頭発表等 # オゾンと放射線の関わりを解き明かす—ANCO-Project (2022.11)\nUncovering the relationship between ozone and radiation―ANCO-Project\nInstitute of Space and Astronautical Science, Japan Aerospace Exploration Agency(JAXA)(ISAS) 教育活動\u003e 教育活動 # 調整中 連絡先\u003e 連絡先 # 📧 Mail: daisukenishihama63@gmail.com\n🐦 Twitter: @daisuke0603\n🔗 Instagram: @daisukenishihama\n██████╗ ██████╗ ██████╗ ██████╗ ██╗ ██╗ ██╔══██╗██╔══██╗██╔══██╗╚════██╗██║ ██║ ██║ ██║██║ ██║██║ ██║ █████╔╝███████║ ██║ ██║██║ ██║██║ ██║ ╚═══██╗██╔══██║ ██████╔╝██████╔╝██████╔╝██████╔╝██║ ██║ ╚═════╝ ╚═════╝ ╚═════╝ ╚═════╝ ╚═╝ ╚═╝ 正式名称は「埼玉大学宇宙工学サークルあかとき」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n正式名称は「Challengers of Rocket Engineering」。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n著書が作成した本プロジェクトに関する広報動画。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n読みやすく、それで簡単に書ける。そのため、私にとって主力のプログラミング言語である。 IPythonや Jupyterといった開発環境に加え、Pythonの苦手な繰り返し作業をC言語にさせることのできる Cythonなどライブラリが方法である。特に、私は科学計算に用いることが多いため、 Matplotlib、 Pandas、 Numpy、 Scipyなどを用いることが多い。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n1972年に誕生し、非常に長い歴史を持ち、OSや組み込み系の開発などに用いられる。特にC言語はPythonのような インタプリタ言語ではなく、 コンパイル方式であり、また変数の型を厳密に定義付けられるため非常に高速で、速度が求められる大掛かりな計算においては科学計算を主に扱う私にとって欠かせない存在。コンパイルには GNU Compiler Collection (GCC)を用いる。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nC言語と似た言語であるが、データ構造を定義でき、例外処理が可能であることからC言語よりも１つ上の存在である。より高度な処理を行うときに重宝する。また、 マイコンの１つである Arduinoも、C++をベースにしたArduino言語で記述できるため非常に有用性も高い。\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n現在、開発途中でひよこの言語。C言語とPythonのいいとこ取りをしたプログラミング言語であり、非常に高速かつ簡単に記述できる。私が初めて独学ではなく、他者と交えてゼミで学習したプログラミング言語である。体系的に学んだはいいが、PythonやC言語に逃げてしまい、あまり使ってない。▶ Think Julia: How to Think Like a Computer Scientist\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"0001年 1月 1日","permalink":"/about/","section":"","summary":"ddd3hLab（本サイト）は、物理学徒が日々気になったことを独自に研究したり、開発を行ったことを記録しまとめ、ときには戯言を公開したりするサイトである。\n著者は、西濱 大将（にしはま だいすけ、Daisuke NISHIHAMA）で、専門は宇宙理論物理学、宇宙実験物理学、数値解析、電子回路設計、情報通信工学である。\n来歴\u003e 来歴 # 2000年06月 埼玉県草加市にて誕生する。 2014年08月 Android向けに提供していたメーラーアプリ「Bluemail」の日本語監修を担当（2017年01月引退） 2019年03月 春日部共栄高等学校卒業 2020年04月 埼玉大学理学部物理学科入学 2020年05月 あかとき1・CORE2に入会 2020年10月 自作ロケットエンジン「LIATRIS.musica」燃焼試験を実施、Ground Support Equipment (GSE) を運用する。 2020年11月 COREのハイブリットロケット開発チーム「ミソラ工房」に所属し、第16回能代宇宙イベントにて「HIBARI1」のシミュレーションを担当。 2020年12月 CanSat機体「SC-5」の電装班長 2020年02月 自作ロケットエンジン「LIATRIS.musica」燃焼試験、GSE運用 2021年03月 ハイブリットロケット開発チーム「Duo」にてノーズ電装を担当し、御宿共同打上実験にて４年ぶりのデータ回収を実現する。独自開発した放射線検出器を搭載したCanSat機体「SC-4」の回収。 CORE 2021年3月御宿共同打上実験PV（フルバージョン） - YouTube　3 2021年04月 CORE埼玉大学支部を創設。 初代代表（2022年3月退任） CORE本部会計監査（2022年3月退任） 2021年10月 エムラボ株式会社にプログラミング講師として入社（2022年07月退社） 2021年12月 CanSat機体「SC-2.","title":"About"},{"content":" Date Title Key 2022-01-08 Findings gained through computational physics Report Document 2023-02-08 Python講座_slide スライド 資料 ","date":"0001年 1月 1日","permalink":"/docs/","section":"","summary":" Date Title Key 2022-01-08 Findings gained through computational physics Report Document 2023-02-08 Python講座_slide スライド 資料 ","title":"Docs"},{"content":"","date":"0001年 1月 1日","permalink":"/research/","section":"Researches","summary":"","title":"Researches"},{"content":" オゾンと放射線の関わりを解き明かす—ANCO-Project\u003e オゾンと放射線の関わりを解き明かす—ANCO-Project # Uncovering the relationship between ozone and radiation―ANCO-Project\u003e Uncovering the relationship between ozone and radiation―ANCO-Project # 会議発表論文\r足立 恭果 , 石﨑 大貴 , 佐藤 正騎 , 須田 亮介 , 清本 拓人 , 西濱 大将 , 宮崎 剛 , 蛯澤 悠 , 宇井 瞭介 , 飯田 和大 , 金子 尚広 , 徳光 和哉 , 大塲 翔悟 , 勝野 太智 , 山本 大凱 , 川瀬 幹己\nADACHI Kyoka , ISHIZAKI Taiki , SATO Masaki , SUDA Ryosuke , KIYOMOTO Takuto , NISHIHAMA Daisuke , MIYAZAKI Tsuyoshi , EBISAWA Yu , UI Ryosuke , IIDA Kazuhiro , KANEKO Takahiro , TOKUMITSU Kazuya , OBA Shogo , KATSUNO Taichi , YAMAMOTO Taiga , KAWASE Motoki\n大気球シンポジウム: 2022年度/Balloon Symposium: 2022, (2022-11) , 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン)) , Balloon Symposium 2022 (November 7-8, 2022. Hybrid(in-person \u0026amp; online) Conference (Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency (JAXA)(ISAS)), Sagamihara, Kanagawa Japan , 資料番号: SA6000177041 , レポート番号: isas22-sbs-041\nアイテムタイプ 会議発表論文 / Conference Paper 言語 日本語 その他のタイトル（英） Uncovering the relationship between ozone and radiation―ANCO-Project 著者 足立 恭果 石﨑 大貴 佐藤 正騎 須田 亮介 清本 拓人 西濱 大将 宮崎 剛 蛯澤 悠 宇井 瞭介 飯田 和大 金子 尚広 徳光 和哉 大塲 翔悟 勝野 太智 山本 大凱 川瀬 幹己 著者（英） ADACHI Kyoka ISHIZAKI Taiki SATO Masaki SUDA Ryosuke KIYOMOTO Takuto NISHIHAMA Daisuke MIYAZAKI Tsuyoshi EBISAWA Yu UI Ryosuke IIDA Kazuhiro KANEKO Takahiro TOKUMITSU Kazuya OBA Shogo KATSUNO Taichi YAMAMOTO Taiga KAWASE Motoki 著者所属 名古屋大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 埼玉大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋大学 名古屋工業大学 著者所属（英） Nagoya University Saitama University Saitama University Saitama University Saitama University Saitama University Saitama University Saitama University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya University Nagoya Institute of Technology 出版者 宇宙航空研究開発機構宇宙科学研究所(JAXA)(ISAS) 出版者（英） Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency(JAXA)(ISAS) 雑誌名 大気球シンポジウム: 2022年度 雑誌名(英) Balloon Symposium: 2022 発行年 Nov-22 会議概要（会議名, 開催地, 会期, 主催者等） 大気球シンポジウム 2022年度（2022年11月7-8日. ハイブリッド開催（JAXA相模原キャンパス\u0026amp; オンライン)) 会議概要（会議名, 開催地, 会期, 主催者等）（英） Balloon Symposium 2022 (November 7-8, 2022. Hybrid(in-person \u0026amp; online) Conference (Institute of Space and Astronautical Science, Japan Aerospace Exploration Agency (JAXA)(ISAS)), Sagamihara, Kanagawa Japan 内容記述 著者人数: 16名 著者版フラグ author 資料番号 資料番号: SA6000177041 レポート番号 レポート番号: isas22-sbs-041 ","date":"0001年 1月 1日","permalink":"/research/anco/","section":"Researches","summary":"オゾンと放射線の関わりを解き明かす—ANCO-Project\u003e オゾンと放射線の関わりを解き明かす—ANCO-Project # Uncovering the relationship between ozone and radiation―ANCO-Project\u003e Uncovering the relationship between ozone and radiation―ANCO-Project # 会議発表論文\r足立 恭果 , 石﨑 大貴 , 佐藤 正騎 , 須田 亮介 , 清本 拓人 , 西濱 大将 , 宮崎 剛 , 蛯澤 悠 , 宇井 瞭介 , 飯田 和大 , 金子 尚広 , 徳光 和哉 , 大塲 翔悟 , 勝野 太智 , 山本 大凱 , 川瀬 幹己","title":"オゾンと放射線の関わりを解き明かす—ANCO-Project"}]