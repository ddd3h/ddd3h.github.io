<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ddd3hLab</title>
    <link>https://ddd3h.github.io/</link>
    <description>Recent content on ddd3hLab</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 03 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ddd3h.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gitを使い倒したい</title>
      <link>https://ddd3h.github.io/blog/2021-01-03-git/</link>
      <pubDate>Mon, 03 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/2021-01-03-git/</guid>
      <description>経緯 今まではサーバーの勉強なり色々兼ねてサイトを運営していたのですが，楽にサイトの管理ができないかと考え，HugoとGitで行うに至りました．そこでGitについての勉強メモとして掲載します．
自分のサイトではMDファイルをHugoでHTML変換してGithub Pageのリポジトリに上げているので，そのpublicディレクトリをGit管理しようと思います．
ここでのpublicディレクトリとはHTML変換後のファイルら保管されているフォルダーだと認識してください．
Git repositoryをインストールする まず，Gitに上げたいディレクトリに移動します．今回は既にGitに上げたいフォルダ public があるので，publicディレクトリに移動します．
$ cd public 新しくディレクトリを作成する場合は
$ mkdir test などでディレクトリを作成してください．
そのあとでGit repositoryをインストールします
$ git init Initialized empty Git repository in /Users/yuki/workspace/git_test/.git/ ここでエラーが出る場合は，Gitがインストールされない場合があります．
$ git --version でご確認を．
ファイルをステージングする 各ファイルごとにステージさせる場合は
$ git add test.html と１個１個実行します．-Aオプション（または-all）でディレクトリ内の変更があったファイルを一括でステージングさせることもできます．つまり
$ git add -A もし，変更の有無関係なくすべてのファイルをステージングさせる場合は
$ git add . を実行します．（とはいってもgitの性質上，-Aと.は同じと考えるのが普通ですが&amp;hellip;）
コミットする コミットします。-mオプションでコミットメッセージを添えられます．
$ git commit -m &amp;#34;first commit&amp;#34; -mオプションを使用しない場合，vimのような画面になるので変更内容等を確認してください．
リモートリポジトリに反映 指定した名前にリモートリポジトリのアドレスを関連付けます．
リモートリポジトリはネット上に存在するため，ローカルリポジトリとのやり取りを行う時は，アドレス（パス）を指定する必要があります．
作業の都度アドレスを指定するのも大変なので，ここでoriginという名前と関連付け，以後originとして扱えるようにします．
$ git remote add origin git@github.com:ユーザー名/リポジトリ名.git Githubにssh接続する ここかどこかでアクセス権のエラーが出ると思います．この場合の手順を載せておく．</description>
    </item>
    
    <item>
      <title>遺伝的アルゴリズム最終章</title>
      <link>https://ddd3h.github.io/blog/2021-01-01-iden/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/2021-01-01-iden/</guid>
      <description>遺伝的アルゴリズムの最終章 遺伝的アルゴリズムのゼミでは，アルゴリズムの概要から基礎的な内容まで遠回りをしながら一旦プログラムを書いてみて，修正するという形をとってきた。最終章では，今までしてきたことを総まとめる形で終えたい
モジュールをインポートしよう！ 今回の「遺伝的アルゴリズム」では  Numpy  行列（多次元配列）などの数値計算に便利なツール   Pandas  表などを扱うのに便利なツール  の２つを使用した。モジュールの入れ方は    import numpy as np import pandas as pd とすればいい。ただし，https://blueqat.com/blueqatcloud を使う者や，Pandasでエラーが出る者は !pip install openpyxlを最後の行に入れるといい！
今までのプログラムを段階ごとに関数にしよう！ エクセルデータを読み取り，データを返す関数 def read_excel(): #Excelデータの整形 df = pd.read_excel(&amp;#34;iden.xlsx&amp;#34;, sheet_name=&amp;#34;Sheet1&amp;#34;) df = df.iloc[4:14,1:33] df = df.fillna(0) df = df.replace(&amp;#34;◎&amp;#34;,2) #休日数のテーブルを作成 holiday = df.iloc[:,31:32].reset_index(drop=True) holiday.columns = [&amp;#34;休日数&amp;#34;] #基礎テーブルの作成 kiso = df.iloc[:,0:31].reset_index(drop=True) kiso.columns = [i+1 for i in range(len(kiso.columns))] return kiso, holiday 引数はなしの関数であることに注意！！</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ddd3h.github.io/about/</link>
      <pubDate>Sat, 02 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/about/</guid>
      <description>このサイトではその辺にいる物理学徒の戯言を投稿します．
2014年8月から2017年1月までの間に当時，Android向けに提供していたメールアプリ「Bluemail」の日本語翻訳のアシスタントを担当。
2016年4月に私立春日部共栄高等学校へ入学。
同年11月に情報技術を高く評価され，Own Flow氏が University of London (Imperial College London, Faculty of Engineering, Computing) への推薦入学を提案。しかし，金銭的な理由と両親の反対により断る。
同校で3年間硬式テニス部に所属し，2019年3月に卒業。
駿台予備学校お茶の水3号館（東大專門校舎）で1年間過ごし，2020年4月に埼玉大学 理学部 物理学科に入学（現在所属）。
尚，埼玉大学宇宙工学サークルあかとき，CORE（Challengers Of Rocket Engineering），早稲田大学公認サークル 歩行会に所属。2020年より初学者向けのWeb系プログラミング言語およびPythonの講師を勤め，2021年よりMinecraftを用いた小中学生向けのプログラミング講師として企業登録．</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://ddd3h.github.io/blog/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://ddd3h.github.io/blog/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://ddd3h.github.io/blog/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de
pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Emoji Support</title>
      <link>https://ddd3h.github.io/blog/emoji-support/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/blog/emoji-support/</guid>
      <description>&lt;p&gt;Emoji can be enabled in a Hugo project in a number of ways.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Kontakt</title>
      <link>https://ddd3h.github.io/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ddd3h.github.io/contact/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
